<!DOCTYPE html>
<html dir="ltr" lang="en">

<head>

    <meta charset="utf-8">
<!-- %meta{:content => "IE=edge,chrome=1", "http-equiv" => "X-UA-Compatible"} -->

<!--Google Apps verification-->

<title>FlashAir Developers - Uploading to FlashAir</title>
<meta content="width=device-width, initial-scale=1.0" name="viewport">
<meta property="fb:admins" content="100006082240886">

<!--[if lt IE 9]>
	<script src="http://html5shim.googlecode.com/svn/trunk/html5.js"></script>
<![endif]-->

<meta name="twitter:card" content="summary">
<meta name="twitter:site" content="@FlashAirDev">
<meta property="fb:admins" content="115819238627364">
<meta property="og:site_name" content="FlashAir Developers">
<meta property="og:image" content="https://flashair-developers.com/images/assets/ogp.png">
<meta property="og:url" content="https://flashair-developers.com/en/documents/tutorials/android/7/">
<meta property="og:type" content="article">
<meta property="og:title" content="FlashAir Developers - Uploading to FlashAir">

<link href="..\..\..\..\..\images\flashair_favicon.ico" rel="shortcut icon">
<link href="..\..\..\..\..\images\apple-touch-icon-152x152-precomposed.png" rel="apple-touch-icon-precomposed" sizes="152x152">
<link href="..\..\..\..\..\images\apple-touch-icon-120x120-precomposed.png" rel="apple-touch-icon-precomposed" sizes="120x120">
<link href="..\..\..\..\..\images\apple-touch-icon-114x114-precomposed.png" rel="apple-touch-icon-precomposed" sizes="114x114">
<link href="..\..\..\..\..\images\apple-touch-icon-76x76-precomposed.png" rel="apple-touch-icon-precomposed" sizes="76x76">
<link href="..\..\..\..\..\images\apple-touch-icon-72x72-precomposed.png" rel="apple-touch-icon-precomposed" sizes="72x72">
<link href="..\..\..\..\..\images\apple-touch-icon-57x57-precomposed.png" rel="apple-touch-icon-precomposed" sizes="57x57">
<!-- Web Fonts -->
<link href="https://fonts.googleapis.com/css?family=Roboto:300,300i,400,400i,500,500i,700,700i" rel="stylesheet">
<link href="https://fonts.googleapis.com/css?family=Raleway:300,400,700" rel="stylesheet">
<link href="https://fonts.googleapis.com/css?family=Pacifico" rel="stylesheet">
<link href="https://fonts.googleapis.com/css?family=PT+Serif" rel="stylesheet">

<!-- Bootstrap core CSS -->
<link href="..\..\..\..\..\css\bootstrap.css" rel="stylesheet">

<!-- Font Awesome CSS -->
<link href="..\..\..\..\..\css\fonts\font-awesome\css\font-awesome.css" rel="stylesheet">

<!-- Plugins -->
<link href="..\..\..\..\..\css\magnific-popup.css" rel="stylesheet">
<link href="..\..\..\..\..\css\settings.css" rel="stylesheet">
<link href="..\..\..\..\..\css\layers.css" rel="stylesheet">
<link href="..\..\..\..\..\css\navigation.css" rel="stylesheet">
<link href="..\..\..\..\..\css\animations.css" rel="stylesheet">
<link href="..\..\..\..\..\css\slick.css" rel="stylesheet">

<!-- The Project's core CSS file -->
<!-- Use css/rtl_style.css for RTL version -->
<link href="..\..\..\..\..\css\style.css" rel="stylesheet">
<!-- The Project's Typography CSS file, includes used fonts -->
<!-- Used font for body: Roboto -->
<!-- Used font for headings: Raleway -->
<!-- Use css/rtl_typography-default.css for RTL version -->
<link href="..\..\..\..\..\css\typography-default.css" rel="stylesheet">
<!-- Color Scheme (In order to change the color scheme, replace the blue.css with the color scheme that you prefer) -->
<link href="..\..\..\..\..\css\light_blue.css" rel="stylesheet">

<!-- Custom css -->
<link href="..\..\..\..\..\css\custom.css" rel="stylesheet">
<link href="..\..\..\..\..\css\prettify.css" rel="stylesheet">
<!--[if lt IE 9]>
	<link href="/css/bootstrap-ie6.css" rel="stylesheet" type="text/css" />
<![endif]-->

    <meta name="keywords" content="FlashAir, Android, app, application, WevDev">
    <meta name="description" content="Tutorials for Android application. FlashAir is a SD card with embedded wireless LAN produced by Toshiba Memory Corp..">
    <meta property="og:description" content="Tutorials for Android application. FlashAir is a SD card with embedded wireless LAN produced by Toshiba Memory Corp..">
</head>

<body class=" ">

    <!-- scrollToTop -->
    <!-- ================ -->
    <div class="scrollToTop circle">
        <i class="fa fa-angle-up"></i>
    </div>

    <!-- page wrapper start -->
    <!-- ================ -->
    <div class="page-wrapper">
        <!-- header-container start -->
        <div class="header-container">
            <!-- header-top start -->
<!-- classes:  -->
<!-- "dark": dark version of header top e.g. class="header-top dark" -->
<!-- "colored": colored version of header top e.g. class="header-top colored" -->
<!-- ================ -->
<div class="header-top dark">
    <div class="container">
        <div class="row">
            <div class="col-6 col-sm-6 col-lg-10">
                <div class="header-top-first clearfix">
                    <ul class="list-inline float-right">
                        <li class="list-inline-item">
                            <a href="..\..\..\..\index.htm" id="go-to-japanese">Japanese</a>&nbsp;&nbsp;&nbsp;/</li>
                        <li class="list-inline-item">
                            English&nbsp;&nbsp;&nbsp;/</li>
                        <li class="list-inline-item">
                            <a href="..\..\..\..\..\zh\index.htm" id="go-to-chinese">Chinese</a>
                        </li>
                    </ul>
                </div>
            </div>
            <div class="col-6 col-sm-6 col-lg-2">
                <!-- header-top-second start -->
                <!-- ================ -->
                <div id="header-top-second" class="clearfix">
                    <!-- header top dropdowns start -->
                    <!-- ================ -->
                    <div class="header-top-dropdown text-right">
                        <div class="btn-group">
                            <a href="..\..\..\..\member\index.htm" class="btn btn-default btn-sm">
                                <i class="fa fa-user pr-2"></i> MyAccount</a>
                        </div>
                    </div>
                    <!--  header top dropdowns end -->
                </div>
                <!-- header-top-second end -->
            </div>
        </div>
    </div>
</div>
<!-- header-top end -->
<!-- header start -->
<!-- classes:  -->
<!-- "fixed": enables fixed navigation mode (sticky menu) e.g. class="header fixed clearfix" -->
<!-- "fixed-desktop": enables fixed navigation only for desktop devices e.g. class="header fixed fixed-desktop clearfix" -->
<!-- "fixed-all": enables fixed navigation only for all devices desktop and mobile e.g. class="header fixed fixed-desktop clearfix" -->
<!-- "dark": dark version of header e.g. class="header dark clearfix" -->
<!-- "centered": mandatory class for the centered logo layout -->
<!-- ================ -->
<header class="header fixed fixed-desktop clearfix">
    <div class="container">
        <div class="row">
            <div class="col-md-auto hidden-md-down pl-3">
                <!-- header-first start -->
                <!-- ================ -->
                <div class="header-first clearfix">

                    <!-- logo -->
                    <div id="logo" class="logo">
                        <a href="..\..\..\..\index.htm">
                            <img alt="FlashAir logo" src="..\..\..\..\..\images\assets\flashairLogo_official_small2.png">
                            &nbsp;FlashAir&trade; Developers
                        </a>
                    </div>

                </div>
                <!-- header-first end -->

            </div>
            <div class="col-lg-7 ml-lg-auto">

                <!-- header-second start -->
                <!-- ================ -->
                <div class="header-second clearfix">

                    <!-- main-navigation start -->
                    <!-- classes: -->
                    <!-- "onclick": Makes the dropdowns open on click, this the default bootstrap behavior e.g. class="main-navigation onclick" -->
                    <!-- "animated": Enables animations on dropdowns opening e.g. class="main-navigation animated" -->
                    <!-- ================ -->
                    <div class="main-navigation main-navigation--mega-menu  animated">
                        <nav class="navbar navbar-expand-lg navbar-light p-0">
                            <div class="navbar-brand clearfix hidden-lg-up">

                                <!-- logo -->
                                <div id="logo-mobile" class="logo">
                                    <a href="..\..\..\..\index.htm">
                                        <img alt="FlashAir logo" src="..\..\..\..\..\images\assets\flashairLogo_official_small2.png">
                                        &nbsp;FlashAir&trade; Developers
                                    </a>
                                </div>

                            </div>
                            <!-- header dropdown buttons -->
                            <div class="header-dropdown-buttons hidden-lg-up p-0 ml-auto mr-3">
                                <div class="btn-group">
                                    <button type="button" class="btn dropdown-toggle dropdown-toggle--no-caret" id="header-drop-3" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                                        <i class="fa fa-search"></i>
                                    </button>
                                    <ul class="dropdown-menu dropdown-menu-right dropdown-animation" aria-labelledby="header-drop-3">
                                        <li>
                                            <form role="search" class="search-box margin-clear" id="cse-search-box" action="http://google.com/cse">
                                                <div class="form-group has-feedback">
                                                    <input type="hidden" name="cx" value="015318272157664795635:6mtpckrtgrq">
                                                    <input type="hidden" name="ie" value="UTF-8">
                                                    <input type="text" name="q" size="31" class="form-control">
                                                    <input type="submit" name="sa" value="Search">
                                                </div>
                                            </form>
                                            <script type="text/javascript" src="http://www.google.com/cse/brand?form=cse-search-box&lang=ja"></script>
                                        </li>
                                    </ul>
                                </div>
                            </div>
                            <!-- header dropdown buttons end -->
                            <button class="navbar-toggler" type="button" data-toggle="collapse" data-target="#navbar-collapse-1" aria-controls="navbar-collapse-1" aria-expanded="false" aria-label="Toggle navigation">
                                <span class="navbar-toggler-icon"></span>
                            </button>

                            <div class="collapse navbar-collapse" id="navbar-collapse-1">
                                <!-- main-menu -->
                                <ul class="navbar-nav ml-xl-auto">
                                    <li class="nav-item dropdown"> <a href="#" class="nav-link dropdown-toggle" id="first-dropdown" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">Discover</a>
                                        <ul class="dropdown-menu" aria-labelledby="first-dropdown">
                                            <li>
                                                <a href="..\..\..\..\discover\overview\index.htm">What's FlashAir?</a>
                                            </li>
                                            <li>
                                                <a href="..\..\..\..\discover\overview\w04\index.htm">Fourth generation FlashAir W-04</a>
                                            </li>
                                            <li>
                                                <a href="..\..\..\..\discover\gettingstarted\index.htm">Getting Started</a>
                                            </li>
                                            <li>
                                                <a href="..\..\..\..\discover\beginners\index.htm">Beginners Guide with FlashAir
                                                    Development</a>
                                            </li>
                                            <li>
                                                <a href="..\..\..\..\discover\usage\index.htm">Get started with FlashAir</a>
                                            </li>
                                            <li>
                                                <a href="..\..\..\..\discover\app\index.htm">Overview of FlashAir Application
                                                    Development</a>
                                            </li>
                                            <li>
                                                <a href="..\..\..\..\discover\device\index.htm">Overview of using Devices with FlashAir</a>
                                            </li>
                                            <li>
                                                <a href="https://iot-hub.flashair-developers.com/en/" target="_blank">FlashAir
                                                    IoT Hub
                                                    <i class="fa fa-external-link"></i>
                                                </a>
                                            </li>
                                        </ul>
                                    </li>
                                    <li class="nav-item dropdown"> <a href="#" class="nav-link dropdown-toggle" id="second-dropdown" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">Application</a>
                                        <ul class="dropdown-menu" aria-labelledby="second-dropdown">
                                            <li>
                                                <a href="..\..\..\..\application\iot\index.htm">Application to IoT</a>
                                            </li>
                                            <li>
                                                <a href="..\..\..\..\application\devices\index.htm">Using with Devices</a>
                                            </li>
                                            <li>
                                                <a href="..\..\..\..\application\workflow\index.htm">Improve efficiency of operations</a>
                                            </li>
                                            <li>
                                                <a href="..\..\..\..\application\share-documents\index.htm">Sharing Documents</a>
                                            </li>
                                            <li>
                                                <a href="..\..\..\..\application\users\index.htm">User's Projects</a>
                                            </li>
                                            <li>
                                                <a href="..\..\..\..\application\showcase\index.htm">App Showcase</a>
                                            </li>
                                        </ul>
                                    </li>
                                    <li class="nav-item dropdown active"> <a href="#" class="nav-link dropdown-toggle" id="third-dropdown" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">Resources</a>
                                        <ul class="dropdown-menu" aria-labelledby="third-dropdown">
                                            <li class="dropdown ">
                                                <a class="dropdown-toggle" data-toggle="dropdown" href="#">Tutorials</a>
                                                <ul class="dropdown-menu to-left">
                                                    <li><a href="..\..\ios\index.htm">iOS</a></li>
                                                    <li><a href="..\index.htm">Android</a></li>
                                                    <li><a href="..\..\web\index.htm">Web browser</a></li>
                                                    <li><a href="..\..\advanced\index.htm">Advanced</a></li>
                                                    <li><a href="..\..\isdio\index.htm">iSDIO</a></li>
                                                    <li><a href="..\..\lua\index.htm">Lua</a></li>
                                                    <li><a href="..\..\users\index.htm">User's Tutorials</a></li>
                                                    <li><a href="..\..\iot-hub\index.htm">FlashAir IoT Hub</a></li>
                                                </ul>
                                            </li>
                                            <li class="dropdown ">
                                                <a class="dropdown-toggle" data-toggle="dropdown" href="#">API Guide</a>
                                                <ul class="dropdown-menu to-left">
                                                    <li><a href="..\..\..\api\commandcgi\index.htm">command.cgi</a></li>
                                                    <li><a href="..\..\..\api\configcgi\index.htm">config.cgi</a></li>
                                                    <li><a href="..\..\..\api\thumbnailcgi\index.htm">thumbnail.cgi</a></li>
                                                    <li><a href="..\..\..\api\uploadcgi\index.htm">upload.cgi</a></li>
                                                    <li><a href="..\..\..\api\config\index.htm">CONFIG</a></li>
                                                    <li><a href="..\..\..\api\utility\index.htm">Browser Utility</a></li>
                                                    <li><a href="..\..\..\api\lua\index.htm">Lua Scripting</a></li>
                                                    <li><a href="..\..\..\api\isdio\index.htm">iSDIO</a></li>
                                                    <li><a href="..\..\..\api\fw40003\index.htm">About FW 4.00.03</a></li>
                                                </ul>
                                            </li>
                                            <li>
                                                <a href="..\..\..\resources\index.htm">Developer Resources</a>
                                            </li>
                                            <li>
                                                <a href="..\..\..\books\index.htm">Books</a>
                                            </li>
                                            <li>
                                                <a href="..\..\..\..\about\events\index.htm">Events</a>
                                            </li>
                                        </ul>
                                    </li>
                                    <li class="nav-item dropdown"> <a href="#" class="nav-link dropdown-toggle" id="fourth-dropdown" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">Support</a>
                                        <ul class="dropdown-menu" aria-labelledby="fourth-dropdown">
                                            <li>
                                                <a href="..\..\..\..\support\index.htm">Support</a>
                                            </li>
                                            <li>
                                                <a href="..\..\..\..\support\forum\index.htm">Developer Forum</a>
                                            </li>
                                            <li>
                                                <a href="..\..\..\..\support\faq\index.htm">FAQ</a>
                                            </li>
                                            <li>
                                                <a href="..\..\..\..\support\iot-hub\index.htm">About FlashAir IoT Hub service end</a>
                                            </li>
                                            <li>
                                                <a href="..\..\..\..\support\developers\index.htm">About FlashAir Developers site closure</a>
                                            </li>                
                                        </ul>
                                    </li>
                                </ul>
                                <!-- main-menu end -->
                            </div>
                        </nav>
                    </div>
                    <!-- main-navigation end -->
                </div>
                <!-- header-second end -->

            </div>
            <div class="col-auto hidden-md-down">
                <!-- header dropdown buttons -->
                <div class="header-dropdown-buttons">
                    <div class="btn-group">
                        <button type="button" class="btn dropdown-toggle dropdown-toggle--no-caret" id="header-drop-1" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                            <i class="fa fa-search"></i>
                        </button>
                        <ul class="dropdown-menu dropdown-menu-right dropdown-animation" aria-labelledby="header-drop-3">
                            <li>
                                <form role="search" class="search-box margin-clear" id="cse-search-box" action="http://google.com/cse" target="_blank">
                                    <div class="form-group has-feedback">
                                        <input type="hidden" name="cx" value="015318272157664795635:6mtpckrtgrq">
                                        <input type="hidden" name="ie" value="UTF-8">
                                        <input type="text" name="q" size="31" class="form-control">
                                        <input type="submit" name="sa" value="Search">
                                    </div>
                                </form>
                                <script type="text/javascript" src="http://www.google.com/cse/brand?form=cse-search-box&lang=ja"></script>
                            </li>
                        </ul>
                    </div>
                </div>
                <!-- header dropdown buttons end -->
            </div>
        </div>
    </div>
    <!-- header end -->
    <!-- Google Analytics Tracking Code -->
    <script>
        (function (i, s, o, g, r, a, m) {
            i['GoogleAnalyticsObject'] = r;
            i[r] = i[r] || function () {
                (i[r].q = i[r].q || []).push(arguments)
            }, i[r].l = 1 * new Date();
            a = s.createElement(o),
                m = s.getElementsByTagName(o)[0];
            a.async = 1;
            a.src = g;
            m.parentNode.insertBefore(a, m)
        })(window, document, 'script', 'https://www.google-analytics.com/analytics.js', 'ga');

        ga('create', 'UA-498925-24', 'auto');
        ga('send', 'pageview');
    </script>
</header>
        </div>
        <!-- header-container end -->

        <!-- main-container start -->
        <!-- ================ -->
        <section class="main-container">

            <div class="container">
                <div class="row">

                    <!-- main start -->
                    <!-- ================ -->
                    <div class="main col-lg-9 order-lg-2 pb-5">

                        <!-- page-title start -->
                        <!-- ================ -->
                        <h1 class="page-title">
                            Uploading to FlashAir </h1>
                        <p class="small text-muted">Latest update: December 2013</p>
                        <!-- page-title end -->

                        <p class="mt-5">
                            <strong>In this tutorial, we will show you how to upload a file to your FlashAir with
                                <a href="..\..\..\api\uploadcgi\index.htm">upload.cgi</a>.
                                <br> This tutorial builds off of
                                <a href="..\4\index.htm">Android Tutorial 4: Displaying Image
                                    Thumbnails</a>.</strong>
                        </p>

                        <h2>Overview</h2>
                        <div class="separator-2"></div>

                        <p>We're going to sort images on your FlashAir by title, and by date. </p>

                        <p>
                            <span class="badge badge-warning">Warning:</span> If this operation is used incorrectly,
                            the FlashAir file system may become corrupted
                            and you may lose your data. Host devices, like a PC, can cache the contents of the SD card
                            (FAT),
                            but will not see changes made by upload.cgi. Therefore, a FAT file system conflict may
                            occur
                            if changes are made by the host device and upload.cgi at the same time. After using
                            upload.cgi,
                            re-insert the SD card and the host device will be able to see your changes. </p>

                        <p>We will add a Date List button to the content list. </p>

                        <div class="m-3">
                            <img class="img-thumbnail mx-auto d-block" src="..\..\..\..\..\images\tutorials\android_tutorial_07_1.png" alt="This image shows the content list" title="">
                        </div>

                        <p>A list, sorted by date, will be displayed when you tap the button. </p>

                        <div class="m-3">
                            <img class="img-thumbnail mx-auto d-block" src="..\..\..\..\..\images\tutorials\android_tutorial_07_5.png" alt="This image shows an updated content list" title="">
                        </div>

                        <p>Information will be displayed when you tap an item. </p>

                        <div class="m-3">
                            <img class="img-thumbnail mx-auto d-block" src="..\..\..\..\..\images\tutorials\android_tutorial_07_4.png" alt="This image shows the new image in an image view" title="">
                        </div>

                        <p>We will need to create the following files in order to write this application: </p>

                        <ul>
                            <li>
                                <em>MainActivity.java</em>
                            </li>
                            <li>
                                <em>activity_main.xml</em>
                            </li>
                            <li>
                                <em>ImageViewActivity.java</em>
                            </li>
                            <li>
                                <em>activity_image_view.xml</em>
                            </li>
                            <li>
                                <em>DateListActivity.java</em>
                            </li>
                            <li>
                                <em>activity_date_list.xml</em>
                            </li>
                            <li>
                                <em>list_view_item.xml</em>
                            </li>
                            <li>
                                <em>MemoEditActivity.java</em>
                            </li>
                            <li>
                                <em>activity_memo_edit.xml</em>
                            </li>
                            <li>
                                <em>grid_view_item.xml</em>
                            </li>
                            <li>
                                <em>FlashAirRequest.java</em>
                            </li>
                        </ul>

                        <p>
                            <span class="badge badge-danger">Important:</span> Please note that your project contains a
                            file called
                            <em>AndroidManifest.xml</em>. This file is used to manage application permissions. By
                            default, applications
                            are not permitted to access the internet. The path to this file should look something like:
                            <em>[Project_Folder]/AndroidManifest.xml</em>
                            <br> You will need to add the following line of code into your
                            <em>AndroidManifest.xml</em> in order for this application to work: </p>

                        <pre class="prettyprint linenums"><code>&lt;uses-permission android:name="android.permission.INTERNET" /&gt;
</code></pre>

                        <h3>
                            Editing strings.xml
                        </h3>

                        <p>Setup strings.xml as follows!
                            <br> The path to this file should look something like:
                            <em>[Project_Folder]/res/values/strings.xml</em>
                        </p>

                        <pre class="prettyprint linenums"><code>&lt;string name="app_name"&gt;android_tutorial_07&lt;/string&gt;
&lt;string name="action_settings"&gt;Settings&lt;/string&gt;
&lt;string name="title_activity_image_view"&gt;ImageViewActivity&lt;/string&gt;
&lt;string name="date_list"&gt;Date List&lt;/string&gt;
&lt;string name="back"&gt;Back&lt;/string&gt;
&lt;string name="directory_name"&gt;Directory Name&lt;/string&gt;
&lt;string name="date"&gt;Date&lt;/string&gt;
&lt;string name="title"&gt;Title&lt;/string&gt;
&lt;string name="title_"&gt;Title:&lt;/string&gt;
&lt;string name="memo"&gt;Memo&lt;/string&gt;
&lt;string name="memo_"&gt;Memo:&lt;/string&gt;    
&lt;string name="save"&gt;Save&lt;/string&gt;
&lt;string name="grid_view_image"&gt;grid_view_image&lt;/string&gt;
</code></pre>

                        <h3>
                            Creating the List Layout
                        </h3>

                        <p>Lets start with
                            <em>activity_main.xml</em>, which determines the layout of our Android App.
                            <br> This can be found in your layout folder.
                            <br> The path to this file should look something like:
                            <em>[Project_Folder]/res/layout/activity_main.xml</em>
                        </p>

                        <p>This file will be identical to the
                            <em>activity_main.xml</em> file from
                            <a href="..\3\index.htm">Android Tutorial 3: Downloading Content</a>,
                            except with a button added to it. </p>

                        <p>Add the following lines to to
                            <em>activity_main.xml</em>. </p>

                        <h4>
                            <em>activity_main.xml</em>
                        </h4>

                        <pre class="prettyprint linenums"><code>&lt;Button
    android:id="@+id/button2"
    android:layout_width="match_parent"
    android:layout_height="wrap_content"
    android:cacheColorHint="#00000000"
    android:text="@string/date_list"
    android:textColor="@android:color/white"
    android:textSize="20sp" /&gt;
</code></pre>

                        <h3>
                            Creating the Image Viewing Layout
                        </h3>

                        <p>Next, edit
                            <em>activity_image_view.xml</em>. This file determines the layout of our image viewing
                            screen.
                            <br> This can also be found in your layout folder.
                            <br> The path to this file should look something like:
                            <em>[Project_Folder]/res/layout/activity_image_view.xml</em>
                        </p>

                        <p>This file will be identical to the
                            <em>activity_main.xml</em> file from
                            <a href="..\3\index.htm">Android Tutorial 3: Downloading Content</a>.
                            <br> Please refer to that tutorial for an explanation of the implementation. </p>

                        <h3>
                            Creating the Date List Layout
                        </h3>

                        <p>Next, write the
                            <em>activity_date_list.xml</em> and
                            <em>list_view_item.xml</em> files. They will determine the layout of our date list and the
                            layout
                            for the rows in the list.
                            <br> They can be found in your layout folder.
                            <br> The path to these files should look something like:
                            <br>
                            <em>[Project_Folder]/res/layout/activity_date_list.xml</em>
                            <br>
                            <em>[Project_Folder]/res/layout/list_view_item.xml</em>
                        </p>

                        <p>You'll want the
                            <em>activity_date_list.xml</em> file to look like this: </p>

                        <h4>
                            <em>activity_date_list.xml</em>
                        </h4>

                        <pre class="prettyprint linenums"><code>&lt;LinearLayout xmlns:android="http://schemas.android.com/apk/res/android"
    xmlns:tools="http://schemas.android.com/tools"
    android:layout_width="fill_parent"
    android:layout_height="match_parent"
    android:gravity="center_horizontal"
    android:orientation="vertical"
    tools:context=".DateListActivity" &gt;

    &lt;Button
        android:id="@+id/button1"
        android:layout_width="match_parent"
        android:layout_height="wrap_content"
        android:cacheColorHint="#00000000"
        android:text="@string/back"
        android:textColor="@android:color/white"
        android:textSize="20sp" /&gt;

    &lt;TextView
        android:id="@+id/textView1"
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:gravity="center_horizontal"
        android:scaleType="centerInside"
        android:text="@string/directory_name"
        android:textAlignment="center"
        android:textAppearance="?android:attr/textAppearanceLarge" /&gt;

    &lt;ListView
        android:id="@+id/listView1"
        android:layout_width="fill_parent"
        android:layout_height="match_parent"
        android:cacheColorHint="#00000000"
        android:clickable="true"
        android:headerDividersEnabled="false" /&gt;

&lt;/LinearLayout&gt;
</code></pre>

                        <p>And you'll want the
                            <em>list_view_item.xml</em> file to look like this: </p>

                        <h4>
                            <em>list_view_item.xml</em>
                        </h4>

                        <pre class="prettyprint linenums"><code>&lt;LinearLayout xmlns:android="http://schemas.android.com/apk/res/android"
    android:layout_width="match_parent"
    android:layout_height="match_parent"
    android:orientation="vertical"&gt;     
   &lt;TextView
        android:id="@+id/textView1"
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:text="@string/date" /&gt;

   &lt;TextView
       android:id="@+id/textView2"
       android:layout_width="wrap_content"
       android:layout_height="wrap_content"
       android:text="@string/title" /&gt;
&lt;/LinearLayout&gt;
</code></pre>

                        <h3>
                            Creating the Operation Screen Layout
                        </h3>

                        <p>Next, we will write the
                            <em>activity_memo_edit.xml</em> and
                            <em>grid_view_item.xml</em> files.
                            <br>
                            <em>activity_memo_edit.xml</em> determines the layout of our operation screen.
                            <br>
                            <em>grid_view_item.xml</em> is for displaying the thumbnails.
                            <br> They can be found in your layout folder.
                            <br> The path to this file should look something like:
                            <br>
                            <em>[Project_Folder]/res/layout/activity_memo_edit.xml</em>
                            <br>
                            <em>[Project_Folder]/res/layout/grid_view_item.xml</em>
                        </p>

                        <p>
                            <em>activity_memo_edit.xml</em> should look something like this: </p>

                        <h4>
                            <em>activity_memo_edit.xml</em>
                        </h4>

                        <pre class="prettyprint linenums"><code>&lt;LinearLayout xmlns:android="http://schemas.android.com/apk/res/android"
    xmlns:tools="http://schemas.android.com/tools"
    android:layout_width="fill_parent"
    android:layout_height="match_parent"
    android:gravity="center_horizontal"
    android:orientation="vertical"
    tools:context=".MemoEditActivity" &gt;

    &lt;Button
        android:id="@+id/button1"
        android:layout_width="match_parent"
        android:layout_height="wrap_content"
        android:cacheColorHint="#00000000"
        android:text="@string/back"
        android:textColor="@android:color/white"
        android:textSize="20sp" /&gt;

    &lt;TextView
        android:id="@+id/textView1"
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:gravity="center_horizontal"
        android:scaleType="centerInside"
        android:text="@string/directory_name"
        android:textAlignment="center"
        android:textAppearance="?android:attr/textAppearanceLarge" /&gt;

    &lt;TextView
        android:id="@+id/textView2"
        android:layout_width="152dp"
        android:layout_height="wrap_content"
        android:layout_marginTop="12dp"
        android:gravity="center"
        android:hint="@string/date"
        android:paddingLeft="10dp"
        android:textSize="18sp" /&gt;

    &lt;GridView
        android:id="@+id/gridView1"
        android:layout_width="match_parent"
        android:layout_height="0dp"
        android:layout_weight="0.01"
        android:horizontalSpacing="10dp"
        android:numColumns="5"
        android:verticalSpacing="10dp" &gt;
    &lt;/GridView&gt;

    &lt;TextView
        android:id="@+id/TextView01"
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:layout_gravity="left"        
        android:layout_marginTop="12dp"
        android:paddingLeft="10dp"
        android:text="@string/title_"
        android:textSize="18sp" /&gt;

    &lt;EditText
        android:id="@+id/editTitle"
        android:layout_width="match_parent"
        android:layout_height="wrap_content"
        android:ems="10"
        android:hint="@string/title"
        android:inputType="text"
        android:textStyle="italic" &gt;
    &lt;/EditText&gt;

    &lt;TextView
        android:id="@+id/TextView02"
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:layout_gravity="left"        
        android:layout_marginTop="20dp"
        android:paddingLeft="10dp"
        android:text="@string/memo_"
        android:textSize="18sp" /&gt;

    &lt;EditText
        android:id="@+id/editMemo"
        android:layout_width="match_parent"
        android:layout_height="wrap_content"
        android:ems="10"
        android:hint="@string/memo"
        android:inputType="text"
        android:textStyle="italic" /&gt;

    &lt;Button
        android:id="@+id/button2"
        android:layout_width="match_parent"
        android:layout_height="wrap_content"
        android:layout_marginTop="12dp"
        android:cacheColorHint="#00000000"
        android:text="@string/save"
        android:textColor="@android:color/white"
        android:textSize="20sp" /&gt;

&lt;/LinearLayout&gt;
</code></pre>

                        <p>And
                            <em>grid_view_item.xml</em> should look like this: </p>

                        <h4>
                            <em>grid_view_item.xml</em>
                        </h4>

                        <pre class="prettyprint linenums"><code>&lt;LinearLayout xmlns:android="http://schemas.android.com/apk/res/android"
    android:layout_width="match_parent"
    android:layout_height="match_parent"&gt;   

    &lt;ImageView  
        android:id="@+id/imageView1"  
        android:layout_width="wrap_content"  
        android:layout_height="wrap_content"  
        android:contentDescription="@string/grid_view_image"        
       /&gt;  
&lt;/LinearLayout&gt;
</code></pre>

                        <h2>
                            Creating the Content List
                        </h2>
                        <div class="separator-2"></div>
                        <p>Next, we will modify
                            <em>MainActivity.java</em>.
                            <br> We will add the click behavior of the Date List button to
                            <a href="..\4\index.htm">Android Tutorial 4: Displaying Image
                                Thumbnails</a>.
                            <br> And then we'll add a sort condition so we get only image files.</p>

                        <h3>
                            Initialization
                        </h3>

                        <p>Please take
                            <em>MainActivity.java</em> from
                            <a href="..\4\index.htm">Android Tutorial 4: Displaying Image
                                Thumbnails</a> and copy it into your new
                            <em>MainActivity.java</em> file. </p>

                        <p>We will add member variables and replace the
                            <code>onCreate(Bundle savedInstanceState)</code> function with the code below: </p>

                        <h4>
                            <em>MainActivity.java</em> (1)</h4>

                        <pre class="prettyprint linenums"><code>public class MainActivity extends Activity implements AdapterView.OnItemClickListener {

    ListView listView;
    ImageView imageView;
    TextView currentDirText;
    TextView numFilesText;
    Button backButton;
    Button datelistButton;
    String rootDir = "DCIM";
    String directoryName = rootDir; // Initialize to rootDirectory
    SimpleAdapter listAdapter;

    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_main);
        try {
            // Set buttons
            backButton = (Button)findViewById(R.id.button1);
            getWindow().setTitleColor(Color.rgb(65, 183, 216));
            backButton.getBackground().setColorFilter(Color.rgb(65, 183, 216), 
                                                        PorterDuff.Mode.SRC_IN);
            backButton.setOnClickListener(new View.OnClickListener() {
                @Override
                public void onClick(View v) {
                    if(directoryName.equals(rootDir)) {
                        listRootDirectory();
                    }
                    else {
                        int index = directoryName.lastIndexOf("/");
                        directoryName = directoryName.substring(0, index);
                        listDirectory(directoryName);
                    }
                }
            });
            backButton.setEnabled(false); // Disable in root directory

            datelistButton = (Button)findViewById(R.id.button2);
            getWindow().setTitleColor(Color.rgb(65, 183, 216));
            datelistButton.getBackground().setColorFilter(Color.rgb(65, 183, 216), 
                                                            PorterDuff.Mode.SRC_IN);
            datelistButton.setOnClickListener(new View.OnClickListener() {
                @Override
                public void onClick(View v) {
                     Intent dateList = new Intent(getBaseContext(), DateListActivity.class);     
                     dateList.putExtra("dir", currentDirText.getText());
                     MainActivity.this.startActivity(dateList);        
                }
            });

            listRootDirectory();
        }
        catch(Exception e) {
            Log.e("ERROR", "ERROR: " + e.toString());
            e.printStackTrace();
        }
    }
</code></pre>

                        <p>We added a Date List button to our previous
                            <code>MainActivity</code> class. </p>

                        <ul>
                            <li>Lines 38-49:
                                <br> We will set a Date List button behavior to press to go to the date list screen.
                            </li>
                        </ul>

                        <h3>
                            Sorting the object
                        </h3>

                        <p>Add an if statement to
                            <code>listDirectory()</code> so that we only see image files.</p>

                        <h4>
                            <em>MainActivity.java</em> (2)</h4>

                        <pre class="prettyprint linenums"><code>            if( (allFiles[i].toString().toLowerCase(Locale.getDefault()).endsWith(".jpg")) 
                || (allFiles[i].toString().toLowerCase(Locale.getDefault()).endsWith(".jpeg"))
                || (allFiles[i].toString().toLowerCase(Locale.getDefault()).endsWith(".jpe")) 
                || (allFiles[i].toString().toLowerCase(Locale.getDefault()).endsWith(".png")) ) {
                // Image file
                fileNames.add(allFiles[i]);
            }
</code></pre>

                        <h3>
                            Setting Up Restart and Back Button Handling
                        </h3>

                        <p>We want the list to be updated when the screen is restarted (for example when the user hits
                            the back
                            button).
                        </p>

                        <h4>
                            <em>MainActivity.java</em> (3)</h4>

                        <pre class="prettyprint linenums"><code>    @Override
    public void onRestart(){
        super.onRestart();
        listDirectory(directoryName);
    }
</code></pre>

                        <h3>
                            Creating the Image Viewing Screen
                        </h3>

                        <p>
                            <code>class ImageViewActivity</code> will be identical to the version in
                            <a href="..\3\index.htm">Android Tutorial 3: Downloading Content</a>.
                            Please refer to that tutorial for an explanation
                            of the implementation. </p>

                        <h3>
                            Creating the Date List Screen
                        </h3>

                        <h4>
                            Initialization
                        </h4>

                        <p>We will start by changing the class declaration, since we want to include a list that
                            contains clickable
                            items. </p>

                        <pre class="prettyprint"><code>#### *DateListActivity.java*   (1)
</code></pre>

                        <p>lined: public class DateListActivity extends Activity implements
                            AdapterView.OnItemClickListener
                            {
                        </p>

                        <p>Then we'll declare the views, other class variables, and organize the screens format.
                            <br> We will also override the
                            <code>onCreate(Bundle savedInstanceState)</code> function that initializes the Activity
                            class.
                            <br> We want the initialization function to set up the list as well as to create a click
                            listener
                            for the
                            <code>Button</code> that we will use to return to the parent directory. </p>

                        <h4>
                            <em>DateListActivity.java</em> (2)</h4>

                        <pre class="prettyprint linenums"><code>    ListView listView;
    ImageView imageView;
    TextView currentDirText;
    Button backButton;
    String rootDir = "DCIM";
    String directoryName;
    SimpleAdapter listAdapter;

    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_date_list);
        try {
            Bundle extrasData = getIntent().getExtras();
            directoryName = extrasData.getString("dir");
            if(!directoryName.equals(rootDir)) {
                int index = directoryName.lastIndexOf("/");
                directoryName = directoryName.substring(0, index);
            }    

            // Set buttons
            backButton = (Button)findViewById(R.id.button1);
            getWindow().setTitleColor(Color.rgb(65, 183, 216));
            backButton.getBackground().setColorFilter(Color.rgb(65, 183, 216), 
                                                        PorterDuff.Mode.SRC_IN);
            backButton.setOnClickListener(new View.OnClickListener() {
                @Override
                public void onClick(View v) {
                    DateListActivity.this.finish(); // Go back to Get screen
                }
            });            
            listDirectory(directoryName);
        }
        catch(Exception e) {
            Log.e("ERROR", "ERROR: " + e.toString());
            e.printStackTrace();
        }
    }
</code></pre>

                        <ul>
                            <li>Lines 22-31:
                                <br> We set the
                                <code>Button</code> that will allow the user to return to the parent directory. </li>
                        </ul>

                        <h3>
                            Creating the List
                        </h3>

                        <p>We just need to get the content list with
                            <code>command.cgi</code>, and then get the file's timestamps as well.
                            <br> This is to avoid problems when two files have the same name. </p>

                        <h4>
                            <em>DateListActivity.java</em> (3)</h4>

                        <pre class="prettyprint linenums"><code>    public void listRootDirectory() {
        directoryName = rootDir;
        listDirectory(directoryName);
    }

    public void listDirectory(String dir) {
        // Prepare command directory path
        currentDirText = (TextView)findViewById(R.id.textView1);
        currentDirText.setText(dir + "/");

        // Fetch list of items in directory and display in a ListView
        new AsyncTask&lt;String, Void, ListAdapter&gt;(){
            @Override
            protected ListAdapter doInBackground(String... params) {
                String dir = params[0];

                String cmddir = "/" + dir;
                ArrayList &lt;NameValuePair&gt; httpParams = new  ArrayList &lt;NameValuePair&gt; ();
                httpParams.add(new BasicNameValuePair("DIR", cmddir));
                cmddir = URLEncodedUtils.format (httpParams, "UTF-8" );

                Set &lt;Integer&gt; dates = new HashSet &lt;Integer&gt;();                
                String files = FlashAirRequest
                            .getString("http://flashair/command.cgi?op=100&amp;" + cmddir);
                String[] allFiles = files.split("([,\n])"); // split by newline or comma
                for(int i = 2; i &lt; allFiles.length; i= i + 6) {
                  if(allFiles[i].contains(".")) {
                    if( (allFiles[i].toString().toLowerCase(Locale.getDefault()).endsWith(".jpg"))
                    || (allFiles[i].toString().toLowerCase(Locale.getDefault()).endsWith(".jpeg"))
                    || (allFiles[i].toString().toLowerCase(Locale.getDefault()).endsWith(".jpe"))
                    || (allFiles[i].toString().toLowerCase(Locale.getDefault()).endsWith(".png"))){
                        // Image file
                        Integer date = Integer.parseInt(allFiles[i+3]);
                        dates.add(date);                          
                    }
                  }
                }                    

                // Get Title
                ArrayList&lt;Map&lt;String, Object&gt;&gt; data = new ArrayList&lt;Map&lt;String, Object&gt;&gt;();
                for (Integer date : dates) {
                    Map&lt;String, Object&gt; entry = new HashMap&lt;String, Object&gt;();                    
                    String dataStr = FlashAirRequest.getString("http://flashair/" 
                                                        + dir + "/" + getDate(date, "") + ".txt");
                    String[] dataStrAry = dataStr.split("([\n])"); // split by newline or comma
                    entry.put("date", getDate(date, "/"));
                    if (dataStrAry.length &gt;= 2) {
                        entry.put("title", dataStrAry[0]);
                    }                    
                    data.add(entry);
                }

               // Set the file list to a widget
                listAdapter = new SimpleAdapter(DateListActivity.this,
                        data,
                        R.layout.list_view_item,
                        new String[]{"date", "title"},
                        new int[]{R.id.textView1, R.id.textView2});
                return listAdapter;
            }
            @Override
            protected void onPostExecute(ListAdapter listAdapter) {
                listView = (ListView)findViewById(R.id.listView1);
                ColorDrawable divcolor = new ColorDrawable(Color.rgb(17, 19, 58));
                listView.setDivider(divcolor);
                listView.setDividerHeight(1);
                listView.setAdapter(listAdapter);
                listView.setOnItemClickListener(DateListActivity.this);                
            }
        }.execute(dir);
</code></pre>

                        <ul>
                            <li>
                                Lines 22-37:
                                <br> We get the date of each file.
                            </li>
                            <li>
                                Lines 40-51:
                                <br> We create a file path based on the date that we get, and then download the file.
                                <br> The tile is saved in the same folder as the image in the form of YYYYMMDD.txt.
                                The title
                                is saved on the top line and notes are on the second line.
                                <br>
                                <code>getDate()</code> generates the date string(YYYYMMDD) from the date format(16-bit
                                integer
                                in decimal notation) which is returned by using
                                <code>op=100</code> with
                                <code>command.cgi</code>.
                            </li>
                            <li>
                                Lines 54-58:
                                <br> We set the
                                <em>list_view_item.xml</em> file that we already created as the layout and also set the
                                date,
                                title and notes.
                                <br> They are bound to the
                                <code>ListView</code> in line 64.
                            </li>
                            <li>
                                Lines 63-68:
                                <br> We create a
                                <code>ListView</code> and pass it the
                                <code>listAdapter</code> we created earlier.
                            </li>
                        </ul>

                        <h3>
                            Setting the Item Click Listener
                        </h3>

                        <p>We will set the list behavior to be the same as it was in
                            <a href="..\4\index.htm">Android Tutorial 4: Displaying Image
                                Thumbnails </a>.
                            <br> If the item clicked is the name of a date, the next screen will display the
                            operation screen
                            of that date. </p>

                        <h4>
                            <em>DateListActivity.java</em> (4)</h4>

                        <pre class="prettyprint linenums"><code>    @Override
    public void onItemClick(AdapterView&lt;?&gt; l, View v, int position, long id) {
        Object item = l.getItemAtPosition(position); 
        if(item instanceof Map&lt;?, ?&gt;) {
            Map&lt;String, Object&gt; mapItem = (Map&lt;String, Object&gt;) item;
            Object selectDate = mapItem.get("date");
            // Next button to start new intent to allow day detail
            Intent memoEdit = new Intent(getBaseContext(), MemoEditActivity.class);     
            memoEdit.putExtra("date", selectDate.toString());
            memoEdit.putExtra("dir", directoryName);    
            DateListActivity.this.startActivity(memoEdit);        
        }
    }
</code></pre>

                        <ul>
                            <li>Lines 4-6:
                                <br> We get the selected date from the
                                <code>ListView</code> by using a
                                <code>Map</code> object. </li>
                        </ul>

                        <h3>
                            Setting Up the Redisplay Behaviour
                        </h3>

                        <p>We want the list to be updated when the screen is restarted (for example when the user hits
                            the back
                            button).
                        </p>

                        <h4>
                            <em>DateListActivity.java</em> (5)</h4>

                        <pre class="prettyprint linenums"><code>    @Override
    public void onRestart(){
        super.onRestart();
        listDirectory(directoryName);
    }
</code></pre>

                        <h3>
                            Getting the Date String (for setting the local file name)
                        </h3>

                        <p>The method which generates the date string(YYYYMMDD) from the 16-bit date format previously
                            mentioned.
                        </p>

                        <h4>
                            <em>DateListActivity.java</em> (6)</h4>

                        <pre class="prettyprint linenums"><code>    public String getDate(Integer date, String sep) {
        return  String.format("%04d", ((date &gt;&gt; 9) &amp; 0x1FF)+1980)+sep+
                String.format("%02d", (date &gt;&gt; 5)  &amp; 0xF)+sep+
                String.format("%02d", date &amp; 0x1F);
    }
</code></pre>

                        <h2>
                            Creating the Operation Screen
                        </h2>
                        <div class="separator-2"></div>

                        <h3>
                            Initialization
                        </h3>

                        <p>We will start by declaring the views and changing the class declaration. We will also
                            override the
                            <code>onCreate(Bundle savedInstanceState)</code> function that initializes the Activity
                            class. We want
                            the list initialization and set a click listener for the
                            <code>Button</code>.</p>

                        <h4>
                            <em>MemoEditActivity.java</em> (1)</h4>

                        <pre class="prettyprint linenums"><code>public class MemoEditActivity extends Activity {
    TextView dateText;
    TextView currentDirText;
    Button backButton;
    Button saveButton;
    EditText titleField;
    EditText memoField;
    GridView gridView;
    String newTitle = "";
    String newMemo = "";
    String date;
    String rootDir = "DCIM";
    String directoryName; 
    ArrayList&lt;String&gt; fileNamelist;

    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_memo_edit);

        Bundle extrasData = getIntent().getExtras();
        date = extrasData.getString("date");
        directoryName = extrasData.getString("dir");

        getWindow().setTitleColor(Color.rgb(65, 183, 216));
        // Set backButton
        backButton = (Button) findViewById(R.id.button1);
        backButton.getBackground().setColorFilter(Color.rgb(65, 183, 216), PorterDuff.Mode.SRC_IN);
        backButton.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View v) {
                MemoEditActivity.this.finish(); // Go back
            }
        });

        // Set saveButton
        saveButton = (Button) findViewById(R.id.button2);
        saveButton.getBackground().setColorFilter(Color.rgb(65, 183, 216), PorterDuff.Mode.SRC_IN);
        saveButton.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View v) {
                getInput();
                saveNewTitleMemo();
            }
        });

        // Set titleField and memoField
        titleField = (EditText) findViewById(R.id.editTitle);
        titleField.setHintTextColor(Color.rgb(65, 183, 216));
        memoField = (EditText) findViewById(R.id.editMemo);
        memoField.setHintTextColor(Color.rgb(65, 183, 216));

        // Set dateText
        dateText = (TextView) findViewById(R.id.textView2);
        dateText.setText(date);

        // Get title and memo
        new AsyncTask&lt;String, Void, ArrayList&lt;String&gt;&gt;() {
            @Override
            protected ArrayList&lt;String&gt; doInBackground(String... params) {
                String dir = params[0];
                ArrayList&lt;String&gt; rtnAry = new ArrayList&lt;String&gt;();
                String files = FlashAirRequest.getString("http://flashair/" 
                                            + dir + "/" + date.replaceAll("/", "") + ".txt");
                String[] allFiles = files.split("([\n])"); // split by newline or comma
                if (allFiles.length &gt;= 2) {
                    // File
                    rtnAry.add(allFiles[0]);
                    rtnAry.add(allFiles[1]);
                }
                return rtnAry;
            }

            @Override
            protected void onPostExecute(ArrayList&lt;String&gt; strary) {
                // Set the data to a TextView
                titleField = (EditText) findViewById(R.id.editTitle);
                memoField = (EditText) findViewById(R.id.editMemo);

                if (strary.size() &gt; 0) {
                    titleField.setText(strary.get(0));
                    memoField.setText(strary.get(1));
                } else {
                    titleField.setText("");
                    memoField.setText("");
                }
            }
        }.execute(directoryName);

        // Set gridView
        gridView = (GridView) findViewById(R.id.gridView1);
        gridView.setOnItemClickListener(new OnItemClickListener() {
            public void onItemClick(AdapterView&lt;?&gt; parent, View v,
                        int position, long id) {
                Object item = parent.getItemAtPosition(position); 
                if (item instanceof Map&lt;?, ?&gt;) {
                    Map&lt;String, Object&gt; mapItem = (Map&lt;String, Object&gt;) item;
                    Object downloadFile = mapItem.get("fname");
                    if ((downloadFile.toString().toLowerCase(Locale.getDefault()).endsWith(".jpg"))
                    || (downloadFile.toString().toLowerCase(Locale.getDefault()).endsWith(".jpeg"))
                    || (downloadFile.toString().toLowerCase(Locale.getDefault()).endsWith(".jpe"))
                    || (downloadFile.toString().toLowerCase(Locale.getDefault()).endsWith(".png"))) 
                    {
                        // Image file, download using ImageViewActivity
                        Intent viewImageIntent = new Intent(MemoEditActivity.this, 
                                                                ImageViewActivity.class);
                        viewImageIntent.putExtra("downloadFile",downloadFile.toString());
                        viewImageIntent.putExtra("directoryName", directoryName);
                        MemoEditActivity.this.startActivity(viewImageIntent);
                    } // Not an image file, do nothing
                }
            }
        });
        listDirectory(directoryName);
    }
</code></pre>

                        <ul>
                            <li>
                                Lines 37-45:
                                <br> We set save button to run save processing when pressed.
                            </li>
                            <li>
                                Lines 58-88:
                                <br> We get the title and notes of selected date from the previous screen, and
                                display them.
                            </li>
                            <li>
                                Lines 91-113:
                                <br> We download the image and display it.
                            </li>
                        </ul>

                        <h3>
                            Showing Thumbnails
                        </h3>

                        <p>This is the same method that we used earlier.
                            <br> Except that we display thumbnails with
                            <code>GridView</code> instead of
                            <code>ListView</code>.</p>

                        <h4>
                            <em>MemoEditActivity.java</em> (2)</h4>

                        <pre class="prettyprint linenums"><code>    public void listDirectory(String dir) {
        // Prepare command directory path
        currentDirText = (TextView)findViewById(R.id.textView1);
        currentDirText.setText(dir + "/");        

        final ProgressDialog waitDialog;        
        // Setting ProgressDialog
        waitDialog = new ProgressDialog(this);
        waitDialog.setMessage("Now downloading...");
        waitDialog.setProgressStyle(ProgressDialog.STYLE_SPINNER);
        waitDialog.show();          

        ArrayList&lt;NameValuePair&gt; httpParams = new ArrayList&lt;NameValuePair&gt;();
        httpParams.add(new BasicNameValuePair("DIR", dir));
        dir = URLEncodedUtils.format(httpParams, "UTF-8");
        // Fetch list of items in directory and display in a ListView
        new AsyncTask&lt;String, Void, ListAdapter&gt;() {
            @Override
            protected ListAdapter doInBackground(String... params) {
                String dir = params[0];
                ArrayList&lt;String&gt; fileNames = new ArrayList&lt;String&gt;();
                fileNamelist = new ArrayList&lt;String&gt;();
                String files = FlashAirRequest
                        .getString("http://flashair/command.cgi?op=100&amp;" + dir);
                String[] allFiles = files.split("([,\n])"); // split by newline�@or comma
                for (int i = 2; i &lt; allFiles.length; i = i + 6) {
                  if (allFiles[i].contains(".") &amp;&amp; allFiles[i+3].contains(getDate16(date))) {
                    if( (allFiles[i].toString().toLowerCase(Locale.getDefault()).endsWith(".jpg")) 
                    || (allFiles[i].toString().toLowerCase(Locale.getDefault()).endsWith(".jpeg"))
                    || (allFiles[i].toString().toLowerCase(Locale.getDefault()).endsWith(".jpe")) 
                    || (allFiles[i].toString().toLowerCase(Locale.getDefault()).endsWith(".png"))){
                        // Image file
                        fileNames.add(allFiles[i]);
                    }
                  }
                }

                // Get thumbnails
                ArrayList&lt;Map&lt;String, Object&gt;&gt; data = new ArrayList&lt;Map&lt;String, Object&gt;&gt;();
                for (int i = 0; i &lt; fileNames.size(); i++) {
                    String url = "";
                    url = "http://flashair/thumbnail.cgi?" + directoryName + "/" + fileNames.get(i);
                    Map&lt;String, Object&gt; entry = new HashMap&lt;String, Object&gt;();
                    Bitmap thumbnail = null;
                    BitmapDrawable drawnIcon = null;
                    if ((url.toLowerCase(Locale.getDefault()).endsWith(".jpg")) 
                        || (url.toLowerCase(Locale.getDefault()).endsWith(".jpeg"))) {
                        thumbnail = FlashAirRequest.getBitmap(url);
                        drawnIcon = new BitmapDrawable(getResources(), thumbnail);
                    }
                    if(thumbnail == null) {
                        entry.put("thmb", R.drawable.ic_launcher);
                    }
                    else {
                        entry.put("thmb", drawnIcon);
                    }
                    entry.put("fname", fileNames.get(i)); // Put file name onto the map
                    data.add(entry);                    
                }

                // Set the file list to a widget
                SimpleAdapter listAdapter = new SimpleAdapter(
                        MemoEditActivity.this, data, R.layout.grid_view_item,
                        new String[] { "thmb", "fname" }, 
                        new int[] {R.id.imageView1, android.R.id.text1 });
                listAdapter.setViewBinder(new CustomViewBinder());

                return listAdapter;
            }

            @Override
            protected void onPostExecute(ListAdapter adapter) {
                waitDialog.dismiss();
                gridView.setAdapter(adapter);
            }
        }.execute(dir);
    }
</code></pre>

                        <ul>
                            <li>
                                Lines 20-36:
                                <br> We get the file name for the target date.
                                <code>getDate16()</code> generates the date string in a date format(16-bit integer in
                                decimal notation)
                                from the target date format(YYYY/MM/DD).
                            </li>
                            <li>
                                Lines 62-66:
                                <br> We set the
                                <em>grid_view_item.xml</em> file as the layout and also set the thubmnail and file
                                name. These
                                are bound to the
                                <code>GridView</code> in line 68.
                            </li>
                            <li>
                                Lines 72-75:
                                <br> Date, title and notes are bound to the view.
                            </li>
                        </ul>

                        <h3>
                            Creating ViewBinder
                        </h3>

                        <p>Here we'll create a custom
                            <code>ViewBinder</code> class, which will be used to get thumbnails.
                            <code>GridView</code>. </p>

                        <h4>
                            <em>MemoEditActivity.java</em> (3)</h4>

                        <pre class="prettyprint linenums"><code>    class CustomViewBinder implements ViewBinder {
        @Override
        public boolean setViewValue(View view, Object obj, String text) {
            if((view instanceof ImageView) &amp;&amp; (obj instanceof Drawable)) {
                ImageView imageView = (ImageView) view;
                BitmapDrawable thumbnail = (BitmapDrawable) obj;
                imageView.setImageDrawable((Drawable)thumbnail);
                return true;
            }
            return false;
        }
    }
</code></pre>

                        <h3>
                            Uploading
                        </h3>

                        <p>We will use the upload CGI command to save the title and notes. </p>

                        <ul>
                            <li>
                                Uploading follows these steps by using
                                <code>upload.cgi</code>.
                                <ol>
                                    <li>Set
                                        <code>UPLOAD=1</code> in the
                                        <a href="..\..\..\api\config\index.htm">CONFIG file</a>
                                    </li>
                                    <li>Restart the FlashAir</li>
                                    <li>Reconnect to the FlashAir</li>
                                    <li>Restrict the write ability of host devices using the
                                        <code>WRITEPROTECT</code> command</li>
                                    <li>Set the directory we want to upload to with the
                                        <code>UPDIR</code> command</li>
                                    <li>Set the file creation date using the
                                        <code>FTIME</code> command</li>
                                    <li>POST the file to upload.cgi!</li>
                                </ol>
                            </li>
                        </ul>

                        <p>Add
                            <code>upload()</code>, which uses
                            <code>upload.cgi</code> by POST request, to the
                            <em>FlashAirRequest.java</em> file from
                            <a href="..\3\index.htm">Android Tutorial 3: Downloading Content</a>.</p>

                        <h4>
                            <em>FlashAirRequest.java</em>
                        </h4>

                        <pre class="prettyprint linenums"><code>    static public String upload(String command, String filename, String saveString) {            
        String result = "";
        final String boundary = "========================";
        try {
            URL url = new URL(command);
            HttpURLConnection httpUrlCon = (HttpURLConnection)url.openConnection();
            httpUrlCon.setDoInput(true);
            httpUrlCon.setDoOutput(true);
            httpUrlCon.setUseCaches(false);
            httpUrlCon.setRequestMethod("POST");    
            httpUrlCon.setRequestProperty("Charset", "UTF-8");
            httpUrlCon.setRequestProperty("Content-Type", 
                                            "multipart/form-data;boundary="+ boundary);
            DataOutputStream ds = new DataOutputStream(httpUrlCon.getOutputStream());
            ds.writeBytes("--" + boundary + "\r\n");
            ds.writeBytes("Content-Disposition: form-data; name=\"upload.cgi\";
                            filename=\"" + filename +"\""+"\r\n");
            ds.writeBytes( "\r\n" );               
            ds.write(saveString.getBytes("UTF-8"));               
            ds.writeBytes( "\r\n" );     
            ds.writeBytes("--" + boundary + "--" + "\r\n");
            ds.flush();
            ds.close();
            if(httpUrlCon.getResponseCode() == HttpURLConnection.HTTP_OK){
                StringBuffer sb = new StringBuffer();
                InputStream is = httpUrlCon.getInputStream();    
                byte[] data = new byte[1024];
                int leng = -1;
                while((leng = is.read(data)) != -1) {
                    sb.append(new String(data, 0, leng));
                }                
                result = sb.toString();    
            }
        } catch (MalformedURLException e) {
            Log.e("ERROR", "ERROR: " + e.toString());
            e.printStackTrace();
        } catch (IOException e) {
            Log.e("ERROR", "ERROR: " + e.toString());
            e.printStackTrace();
        }
        return result;                        
    }
</code></pre>

                        <ul>
                            <li>Lines 12-13:
                                <br> We set the multipartform-data format. </li>
                        </ul>

                        <h4>
                            <em>MemoEditActivity.java</em> (4)</h4>

                        <pre class="prettyprint linenums"><code>    public void saveNewTitleMemo() {  
        new AsyncTask&lt;String, Void, String&gt;(){
            @Override
            protected String doInBackground(String... params) {  
                String parameter = "?WRITEPROTECT=ON&amp;UPDIR=/" + rootDir;    
                parameter = parameter + "&amp;FTIME=" + getDateTime16();
                String filename = date.replaceAll("/", "") + ".txt";
                String rtnStr = "";                    
                rtnStr = FlashAirRequest.getString(params[0] + parameter);
                if(rtnStr.toUpperCase(Locale.getDefault()).equals("SUCCESS")) {
                    rtnStr = FlashAirRequest
                            .upload( params[0], filename, newTitle + "\n" + newMemo);
                }
                return     rtnStr;
            }    
            @Override
            protected void onPostExecute(String result) {
                if(result.toUpperCase(Locale.getDefault()).indexOf("SUCCESS") &gt;= 0) {
                    Toast.makeText(MemoEditActivity.this, "Save Completed.", 
                                    Toast.LENGTH_LONG).show();
                }                    
            }
        }.execute("http://flashair/upload.cgi");
    }
</code></pre>

                        <ul>
                            <li>
                                Lines 5-9:
                                <br> We complete steps 4 to 6.
                                <br>
                                <code>getDateTime16()</code> generates a date string from the current date to indicate
                                the creation
                                date of the file we're uploading. It creates a date and a time as 16-bit hexadecimal
                                values,
                                and concatinates them.
                            </li>
                            <li>
                                Lines 11-12:
                                <br> We upload the title and notes using
                                <code>upload()</code>.
                            </li>
                        </ul>

                        <h3>
                            Getting a Date String for a file's creation date
                        </h3>

                        <p>The method generates a date string from the current date to indicate the creation date of
                            the file
                            we're uploading, as previously mentioned. </p>

                        <h4>
                            <em>MemoEditActivity.java</em> (5)</h4>

                        <pre class="prettyprint linenums"><code>    public String getDateTime16() {

        Calendar calendar = Calendar.getInstance();
        int year = (calendar.get(Calendar.YEAR) - 1980) &lt;&lt; 9;
        int month = (calendar.get(Calendar.MONTH) + 1) &lt;&lt; 5;
        int day = calendar.get(Calendar.DAY_OF_MONTH);
        int hours = calendar.get(Calendar.HOUR_OF_DAY) &lt;&lt; 11;
        int minites = calendar.get(Calendar.MINUTE) &lt;&lt; 5;
        int seconds = calendar.get(Calendar.SECOND) / 2;
        String rtnStr = "0x" +  Integer.toHexString(year + month + day) 
                                    + Integer.toHexString(hours + minites + seconds);

        return rtnStr;
    }
</code></pre>

                        <h3>
                            Converting Our Date to the 16-bit Format
                        </h3>

                        <p>The method generates a date string in the 16-bit format, from the target date
                            format(YYYY/MM/DD).
                        </p>

                        <h4>
                            <em>MemoEditActivity.java</em> (6)</h4>

                        <pre class="prettyprint linenums"><code>    public String getDate16(String date) {
        String rtnStr = "";        
        try{
            int year = (Integer.parseInt(date.substring(0,4)) - 1980) &lt;&lt; 9;        
            int month = (Integer.parseInt(date.substring(5,7))) &lt;&lt; 5;        
            int day = Integer.parseInt(date.substring(8,10));        
            rtnStr = String.valueOf(year + month + day); 
        }
        catch(Exception e) {
            Log.e("ERROR", "ERROR: " + e.toString());
            e.printStackTrace();
        }                  
         return rtnStr;
    }
</code></pre>

                        <h2>
                            Result
                        </h2>
                        <div class="separator-2"></div>

                        <p>Let's set a title and save some notes. </p>

                        <div class="m-3">
                            <img class="img-thumbnail mx-auto d-block" src="..\..\..\..\..\images\tutorials\android_tutorial_07_2.png" alt="This image shows the result" title="">
                        </div>

                        <div class="m-3">
                            <img class="img-thumbnail mx-auto d-block" src="..\..\..\..\..\images\tutorials\android_tutorial_07_3.png" alt="This image shows the result" title="">
                        </div>

                        <p>Enter the title and note and tap the save button. </p>

                        <div class="m-3">
                            <img class="img-thumbnail mx-auto d-block" src="..\..\..\..\..\images\tutorials\android_tutorial_07_4.png" alt="This image shows the result" title="">
                        </div>

                        <p>When you return to the previous screen, you'll see your changes have been saved! </p>

                        <div class="m-3">
                            <img class="img-thumbnail mx-auto d-block" src="..\..\..\..\..\images\tutorials\android_tutorial_07_5.png" alt="This image shows the result" title="">
                        </div>

                        <h2>Sample Code</h2>
                        <div class="separator-2"></div>

                        <p>
                            <a class="btn btn-primary" href="..\..\..\..\..\files\samplecode\android\android_tutorial_07.zip" onclick="_gaq.push(['_trackEvent', 'Sample Code Download', 'android_tutorial_07.zip', 'ja', true]);">
                                <i class="fa fa-download pr-10"></i> android_tutorial_07.zip</a> (533KB)</p>

                        <p>
                            <p class="small">All sample code on this page is licensed under
                                <a href="..\..\..\license\index.htm" target="_blank">BSD 2-Clause License</a>
                            </p>
                        

                        <!-- Social Buttons -->
                        <div class="clearfix">
	<ul class="social-links float-right">
		<li class="twitter">
			<!--Tweet Button-->
			<a href="https://twitter.com/share" class="twitter-share-button" {count}="" data-via="FlashAirDev" data-related="FlashAirDev">Tweet</a>
			<script>
				! function (d, s, id) {
					var js, fjs = d.getElementsByTagName(s)[0],
						p = /^http:/.test(d.location) ? 'http' : 'https';
					if (!d.getElementById(id)) {
						js = d.createElement(s);
						js.id = id;
						js.src = p + '://platform.twitter.com/widgets.js';
						fjs.parentNode.insertBefore(js, fjs);
					}
				}(document, 'script', 'twitter-wjs');
			</script>
		</li>
		<li class="facebook">
			<!--Facebook Like Button-->
			<div id="fb-root"></div>
			<script>
				(function (d, s, id) {
					var js, fjs = d.getElementsByTagName(s)[0];
					if (d.getElementById(id)) return;
					js = d.createElement(s);
					js.id = id;
					js.src = "//connect.facebook.net/en_US/all.js#xfbml=1";
					fjs.parentNode.insertBefore(js, fjs);
				}(document, 'script', 'facebook-jssdk'));
			</script>
			<div class="fb-like" data-href="https://www.flashair-developers.com/" data-send="false" data-layout="button_count" data-width="450" data-show-faces="false" data-font="verdana"></div>
		</li>		
	</ul>
</div>

                        <!-- pagination start -->
                        <nav aria-label="Page navigation">
                            <ul class="pagination justify-content-between">
                                <li>
                                    <a class="btn radius-50 page-link badge-pill" href="..\6\index.htm" aria-label="Previous">
                                        <i class="fa fa-chevron-left pr-10"></i>
                                        Changing SSID and Network Password
                                    </a>
                                </li>
                                <li>
                                    <a class="btn radius-50 page-link badge-pill" href="..\8\index.htm" aria-label="Next">
                                        Photo Share
                                        <i class="fa fa-chevron-right pl-10"></i>
                                    </a>
                                </li>
                            </ul>
                        </nav>
                        <!-- pagination end -->

                        <!-- Amazon bottom link -->
                        <div class="col-12">
	<!--Amazon search result for tablet-->
	<div class="amazon-widget-bottom mx-auto d-none d-md-block d-lg-none">
		<!--
<iframe src="http://rcm.amazon.com/e/cm?t=flasdeve-20&o=1&p=12&l=st1&mode=photo&search=toshiba%20flashair&fc1=333333&lt1=_blank&lc1=009BDD&bg1=FFFFFF&f=ifr" marginwidth="0" marginheight="0" width="300" height="250" border="0" frameborder="0" style="border:none;" scrolling="no"></iframe>
-->
		<div class="amazon-content" marginwidth="0" marginheight="0" width="320" height="250" border="0" frameborder="0" style="border: none;" scrolling="no"></div>
	</div>

	<!--Amazon search result for smartphone-->
	<div class="amazon-widget-mobile mx-auto d-md-none">
		<!--Image-->
		<!--
	<a href="http://www.amazon.com/gp/product/B009RGP7HY/ref=as_li_tf_il?ie=UTF8&camp=1789&creative=9325&creativeASIN=B009RGP7HY&linkCode=as2&tag=flasdeve-20" alt="TOSHIBA FlashAir SD card 8GB SD-WB008G"><img src="http://ws.assoc-amazon.com/widgets/q?_encoding=UTF8&ASIN=B009RGP7HY&Format=_SL110_&ID=AsinImage&MarketPlace=US&ServiceVersion=20070822&WS=1&tag=flasdeve-20" style="vertical-align:middle;"/></a><br>
-->
		<!--Text-->
		<!--
<a href="http://www.amazon.com/gp/product/B009RGP7HY/ref=as_li_tf_tl?ie=UTF8&camp=1789&creative=9325&creativeASIN=B009RGP7HY&linkCode=as2&tag=flasdeve-20">Find TOSHIBA FlashAir SD card 8GB SD-WB008G on Amazon.com</a><img src="http://www.assoc-amazon.com/e/ir?t=flasdeve-20&l=as2&o=1&a=B009RGP7HY" width="1" height="1" border="0" alt="" style="border:none !important; margin:0px !important;" />
-->
		<div class="amazon-content" marginwidth="0" marginheight="0" border="0" frameborder="0" style="border: none;" scrolling="no"></div>
	</div>
</div>

                    </div>
                    <!-- main end -->

                    <!-- sidebar start -->
                    <!-- ================ -->
                    <aside class="col-lg-3 col-xl-3 order-lg-1">
                        <div class="sidebar">
  <div class="block clearfix">
    <nav>
      <ul class="nav flex-column">
        <li class="nav-item"> <a class="nav-link" href="..\1\index.htm">
          Overview of FlashAir App Development for Android
          </a>
        </li>

        <li class="nav-item"> <a class="nav-link" href="..\2\index.htm">
          Getting A List of Contents
          </a>
        </li>

        <li class="nav-item"> <a class="nav-link" href="..\3\index.htm">
          Downloading Content
          </a>
        </li>

        <li class="nav-item"> <a class="nav-link" href="..\4\index.htm">
          Displaying Image Thumbnails
          </a>
        </li>

        <li class="nav-item"> <a class="nav-link" href="..\5\index.htm">
          Auto-Refreshing Content List
          </a>
        </li>

        <li class="nav-item"> <a class="nav-link" href="..\6\index.htm">
          Changing SSID and Network Password
          </a>
        </li>

        <li class="nav-item active"> <a class="nav-link active" href="index.htm">
          Uploading to FlashAir
          </a>
        </li>

        <li class="nav-item"> <a class="nav-link" href="..\8\index.htm">
          Photo Share
          </a>
        </li>
        <li>
          <br>
        </li>
        <li class="nav-item">
          <a class="nav-link" href="..\index.htm">
            Back to Content List
          </a>
        </li>
      </ul>
    </nav>
  </div>
  <p>
    <a href="..\index.htm">
      <img alt="flashair android" src="..\..\..\..\..\images\assets\flashair-android-side.png">
    </a>
  </p>

  <!-- Amazon side link -->
  <!--Amazon search result for desktop-->
<div class="amazon-widget-side d-none d-lg-block">
	<!--
	<iframe src="http://rcm.amazon.com/e/cm?t=flasdeve-20&o=1&p=14&l=st1&mode=photo&search=toshiba%20flashair&fc1=333333&lt1=_blank&lc1=009BDD&bg1=FFFFFF&f=ifr" marginwidth="0" marginheight="0" width="160" height="600" border="0" frameborder="0" style="border: medium none; float: right; font-size: 14px;" scrolling="no"></iframe>
	-->
	<div class="amazon-content" marginwidth="0" marginheight="0" width="160" height="600" border="0" frameborder="0" style="border: medium none; float: right; font-size: 14px;" scrolling="no"></div>
</div>
                    </div></aside>
                    <!-- sidebar end -->

                </div>
            </div>
        </section>
        <!-- main-container end -->

        <!-- footer start -->
        <!-- ================ -->
        <!-- footer start -->
<!-- ================ -->
<footer id="footer" class="clearfix ">

  <!-- .footer start -->
  <!-- ================ -->
  <div class="footer">
    <div class="container">
      <div class="footer-inner">
        <div class="row">
          <div class="col-lg-4">
            <div class="footer-content">
              <h2 class="title">
                <img alt="FlashAir logo" src="..\..\..\..\..\images\assets\flashairLogo_official_small2.png"> FlashAir&trade; Developers</h2>
              <div class="separator-2"></div>
              <p>
                  A technical information website for developers of Toshiba FlashAir apps or services. FlashAir Developers is operated by Fixstars in cooperation with Toshiba Memory Corporation. To learn more about Fixstars, visit
                <a target="_blank" href="http://www.fixstars.com">www.fixstars.com
                  <i class="fa fa-external-link"></i>
                </a>. ?FlashAir is a trademark of Toshiba Memory Corporation.
              </p>
              <ul class="social-links circle animated-effect-1" style="margin-bottom: 10px">
                <li class="facebook">
                  <a href="https://www.facebook.com/FlashAir-Developers-115819238627364/" target="_blank">
                    <i class="fa fa-facebook"></i>
                  </a>
                </li>
                <li class="twitter">
                  <a href="https://twitter.com/FlashAirDev/" target="_blank">
                    <i class="fa fa-twitter"></i>
                  </a>
                </li>
              </ul>
              <ul class="list-unstyled list-inline m-0">
                <li class="list-inline-item"><a href="..\..\..\..\terms-of-use\index.htm">Terms of Use</a></li>
                <li class="list-inline-item">|</li>
                <li class="list-inline-item"><a href="..\..\..\..\privacypolicy\index.htm">Privacy Policy</a></li>
              </ul>
            </div>
          </div>
          <div class="col-lg-4">
            <div class="footer-content">
              <h2 class="title">Twitter</h2>
              <div class="separator-2"></div>
              <div id="twitterWidget">
                <a class="twitter-timeline" data-theme="light" href="https://twitter.com/FlashAirDev" data-widget-id="344743426811641856" height="230" data-chrome="nofooter noheader noborders transparent">Latest News</a>
                <script>
                  ! function (d, s, id) {
                    var js, fjs = d.getElementsByTagName(s)[0],
                      p = /^http:/.test(d.location) ? 'http' : 'https';
                    if (!d.getElementById(id)) {
                      js = d.createElement(s);
                      js.id = id;
                      js.src = p + "://platform.twitter.com/widgets.js";
                      fjs.parentNode.insertBefore(js, fjs);
                    }
                  }(document, "script", "twitter-wjs");
                </script>
              </div>
            </div>
          </div>
          <div class="col-lg-4">
            <div class="footer-content">
              <h2 class="title">Sitemap</h2>
              <div class="separator-2"></div>
              <nav>
                <ul class="nav flex-column">
                  <li class="nav-item">
                    <a class="nav-link" href="..\..\..\..\discover\overview\index.htm">What's FlashAir?
                    </a>
                  </li>
                  <li class="nav-item">
                    <a class="nav-link" href="..\..\..\resources\index.htm">Developer Resources
                    </a>
                  </li>
                  <li class="nav-item">
                    <a class="nav-link" href="..\..\index.htm">Tutorials
                    </a>
                  </li>
                  <li class="nav-item">
                    <a class="nav-link" href="..\..\..\api\index.htm">API Guide
                    </a>
                  </li>
                  <li class="nav-item">
                    <a class="nav-link" href="..\..\..\..\support\index.htm">Support
                    </a>
                  </li>
                  <li class="nav-item">
                    <a class="nav-link" href="..\..\..\..\support\forum\index.htm">Developer Forum
                    </a>
                  </li>
                  <li class="nav-item">
                    <a class="nav-link" href="https://iot-hub.flashair-developers.com/en/" target="_blank">FlashAir IoTHub <i class="fa fa-external-link"></i>
                    </a>
                  </li>
                </ul>
              </nav>
            </div>
          </div>
        </div>
      </div>
    </div>
  </div>
  <!-- .footer end -->

  <!-- .subfooter start -->
  <!-- ================ -->
  <div class="subfooter">
    <div class="container">
      <div class="subfooter-inner">
        <div class="row">
          <div class="col-md-12">
            <p class="text-center">Copyright &copy; 2019 FlashAir Developers. All rights reserved.</p>
          </div>
        </div>
      </div>
    </div>
  </div>
  <!-- .subfooter end -->

  <div id="overlay">
    <div class="container">
      <div class="row">
        <div class="col-md-10 ml-auto text-white">
          <p class="mt-3">If you write software or change the settings which are described on this site to your FlashAir device which was purchased at a mass retailer or online shop, it will not be eligible for a free replacement under the warranty policy. Please acknowledge and carry out development at your own risk.
          </p>
        </div>
        <div class="col-md-2 row">
          <div class="align-self-center">
          <button class="btn btn-default" id="btn-agree">Accept</button>
        </div>
        </div>
      </div>
    </div>
  </div>

</footer>
<!-- footer end -->

<!-- JavaScript files placed at the end of the document so the pages load faster -->
<!-- ================================================== -->
<!-- Jquery and Bootstap core js files -->
<script src="..\..\..\..\..\js\jquery.min.js"></script>
<script src="..\..\..\..\..\js\bootstrap.bundle.min.js"></script>
<!-- jQuery Revolution Slider  -->
<script src="..\..\..\..\..\js\jquery.themepunch.tools.min.js"></script>
<script src="..\..\..\..\..\js\jquery.themepunch.revolution.min.js imagesloaded.pkgd.min.js.pagespeed.jc.cG4Ou2l09T.js"></script><script>eval(mod_pagespeed_faLzhRoycV);</script>
<!-- Isotope javascript -->
<script>eval(mod_pagespeed_e7p3yiKri5);</script>
<script src="..\..\..\..\..\js\isotope.pkgd.min.js jquery.magnific-popup.min.js jquery.waypoints.min.js sticky.min.js jquery.countTo.js.pagespeed.jc.cWqBgip635.js"></script><script>eval(mod_pagespeed_EzjKnImtZK);</script>
<!-- Magnific Popup javascript -->
<script>eval(mod_pagespeed_hr4XVzGccf);</script>
<!-- Appear javascript -->
<script>eval(mod_pagespeed_zhicDWZgIJ);</script>
<script>eval(mod_pagespeed_MTpYywWOfL);</script>
<!-- Count To javascript -->
<script>eval(mod_pagespeed_dmh3ejQ5o0);</script>
<!-- Slick carousel javascript -->
<script src="..\..\..\..\..\js\slick.min.js pace.min.js template.js jquery.cookie.js custom.js jquery.matchHeight.js.pagespeed.jc.Y3630FlbPX.js"></script><script>eval(mod_pagespeed_s1mKdTeuWx);</script>
<!-- Pace javascript -->
<script>eval(mod_pagespeed_Zs67JgCVyk);</script>
<!-- Initialization of Plugins -->
<script>eval(mod_pagespeed_BIPkzwMbEw);</script>
<!-- Custom Scripts -->
<script>eval(mod_pagespeed_uSq_SD1Gz5);</script>
<script>eval(mod_pagespeed_mqKjjurRp4);</script>
<script>eval(mod_pagespeed_TteNs$c3Zl);</script>
<script>
  $(function () {
    $('.matchHeight').matchHeight();
  });
</script>
<script src="..\..\..\..\..\js\script.js prettify.js lang-lua.js lang-css.js.pagespeed.jc.ECF3Z77mjV.js"></script><script>eval(mod_pagespeed_SrZ0Yqg7MZ);</script>
<script>eval(mod_pagespeed_RSPiDhly$4);</script>
<script>eval(mod_pagespeed_0pGoVUEAt9);</script>
<script>eval(mod_pagespeed_IrbA2eGHA$);</script>
<script>
  ! function ($) {
    $(function () {
      PR.prettyPrint()
    })
  }(window.jQuery)
</script>
        <!-- footer end -->
    </div>
    <!-- page wrapper end -->
</body>

</html>