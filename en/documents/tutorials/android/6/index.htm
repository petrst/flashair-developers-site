<!DOCTYPE html>
<html dir="ltr" lang="en">

<head>

    <meta charset="utf-8">
<!-- %meta{:content => "IE=edge,chrome=1", "http-equiv" => "X-UA-Compatible"} -->

<!--Google Apps verification-->

<title>FlashAir Developers - Changing SSID and Network Password</title>
<meta content="width=device-width, initial-scale=1.0" name="viewport">
<meta property="fb:admins" content="100006082240886">

<!--[if lt IE 9]>
	<script src="http://html5shim.googlecode.com/svn/trunk/html5.js"></script>
<![endif]-->

<meta name="twitter:card" content="summary">
<meta name="twitter:site" content="@FlashAirDev">
<meta property="fb:admins" content="115819238627364">
<meta property="og:site_name" content="FlashAir Developers">
<meta property="og:image" content="https://flashair-developers.com/images/assets/ogp.png">
<meta property="og:url" content="https://flashair-developers.com/en/documents/tutorials/android/6/">
<meta property="og:type" content="article">
<meta property="og:title" content="FlashAir Developers - Changing SSID and Network Password">

<link href="..\..\..\..\..\images\flashair_favicon.ico" rel="shortcut icon">
<link href="..\..\..\..\..\images\apple-touch-icon-152x152-precomposed.png" rel="apple-touch-icon-precomposed" sizes="152x152">
<link href="..\..\..\..\..\images\apple-touch-icon-120x120-precomposed.png" rel="apple-touch-icon-precomposed" sizes="120x120">
<link href="..\..\..\..\..\images\apple-touch-icon-114x114-precomposed.png" rel="apple-touch-icon-precomposed" sizes="114x114">
<link href="..\..\..\..\..\images\apple-touch-icon-76x76-precomposed.png" rel="apple-touch-icon-precomposed" sizes="76x76">
<link href="..\..\..\..\..\images\apple-touch-icon-72x72-precomposed.png" rel="apple-touch-icon-precomposed" sizes="72x72">
<link href="..\..\..\..\..\images\apple-touch-icon-57x57-precomposed.png" rel="apple-touch-icon-precomposed" sizes="57x57">
<!-- Web Fonts -->
<link href="https://fonts.googleapis.com/css?family=Roboto:300,300i,400,400i,500,500i,700,700i" rel="stylesheet">
<link href="https://fonts.googleapis.com/css?family=Raleway:300,400,700" rel="stylesheet">
<link href="https://fonts.googleapis.com/css?family=Pacifico" rel="stylesheet">
<link href="https://fonts.googleapis.com/css?family=PT+Serif" rel="stylesheet">

<!-- Bootstrap core CSS -->
<link href="..\..\..\..\..\css\bootstrap.css" rel="stylesheet">

<!-- Font Awesome CSS -->
<link href="..\..\..\..\..\css\fonts\font-awesome\css\font-awesome.css" rel="stylesheet">

<!-- Plugins -->
<link href="..\..\..\..\..\css\magnific-popup.css" rel="stylesheet">
<link href="..\..\..\..\..\css\settings.css" rel="stylesheet">
<link href="..\..\..\..\..\css\layers.css" rel="stylesheet">
<link href="..\..\..\..\..\css\navigation.css" rel="stylesheet">
<link href="..\..\..\..\..\css\animations.css" rel="stylesheet">
<link href="..\..\..\..\..\css\slick.css" rel="stylesheet">

<!-- The Project's core CSS file -->
<!-- Use css/rtl_style.css for RTL version -->
<link href="..\..\..\..\..\css\style.css" rel="stylesheet">
<!-- The Project's Typography CSS file, includes used fonts -->
<!-- Used font for body: Roboto -->
<!-- Used font for headings: Raleway -->
<!-- Use css/rtl_typography-default.css for RTL version -->
<link href="..\..\..\..\..\css\typography-default.css" rel="stylesheet">
<!-- Color Scheme (In order to change the color scheme, replace the blue.css with the color scheme that you prefer) -->
<link href="..\..\..\..\..\css\light_blue.css" rel="stylesheet">

<!-- Custom css -->
<link href="..\..\..\..\..\css\custom.css" rel="stylesheet">
<link href="..\..\..\..\..\css\prettify.css" rel="stylesheet">
<!--[if lt IE 9]>
	<link href="/css/bootstrap-ie6.css" rel="stylesheet" type="text/css" />
<![endif]-->

    <meta name="keywords" content="FlashAir, Android, app, application, WevDev">
    <meta name="description" content="Tutorials for Android application. FlashAir is a SD card with embedded wireless LAN produced by Toshiba Memory Corp..">
    <meta property="og:description" content="Tutorials for Android application. FlashAir is a SD card with embedded wireless LAN produced by Toshiba Memory Corp..">
</head>

<body class=" ">

    <!-- scrollToTop -->
    <!-- ================ -->
    <div class="scrollToTop circle">
        <i class="fa fa-angle-up"></i>
    </div>

    <!-- page wrapper start -->
    <!-- ================ -->
    <div class="page-wrapper">
        <!-- header-container start -->
        <div class="header-container">
            <!-- header-top start -->
<!-- classes:  -->
<!-- "dark": dark version of header top e.g. class="header-top dark" -->
<!-- "colored": colored version of header top e.g. class="header-top colored" -->
<!-- ================ -->
<div class="header-top dark">
    <div class="container">
        <div class="row">
            <div class="col-6 col-sm-6 col-lg-10">
                <div class="header-top-first clearfix">
                    <ul class="list-inline float-right">
                        <li class="list-inline-item">
                            <a href="..\..\..\..\index.htm" id="go-to-japanese">Japanese</a>&nbsp;&nbsp;&nbsp;/</li>
                        <li class="list-inline-item">
                            English&nbsp;&nbsp;&nbsp;/</li>
                        <li class="list-inline-item">
                            <a href="..\..\..\..\..\zh\index.htm" id="go-to-chinese">Chinese</a>
                        </li>
                    </ul>
                </div>
            </div>
            <div class="col-6 col-sm-6 col-lg-2">
                <!-- header-top-second start -->
                <!-- ================ -->
                <div id="header-top-second" class="clearfix">
                    <!-- header top dropdowns start -->
                    <!-- ================ -->
                    <div class="header-top-dropdown text-right">
                        <div class="btn-group">
                            <a href="..\..\..\..\member\index.htm" class="btn btn-default btn-sm">
                                <i class="fa fa-user pr-2"></i> MyAccount</a>
                        </div>
                    </div>
                    <!--  header top dropdowns end -->
                </div>
                <!-- header-top-second end -->
            </div>
        </div>
    </div>
</div>
<!-- header-top end -->
<!-- header start -->
<!-- classes:  -->
<!-- "fixed": enables fixed navigation mode (sticky menu) e.g. class="header fixed clearfix" -->
<!-- "fixed-desktop": enables fixed navigation only for desktop devices e.g. class="header fixed fixed-desktop clearfix" -->
<!-- "fixed-all": enables fixed navigation only for all devices desktop and mobile e.g. class="header fixed fixed-desktop clearfix" -->
<!-- "dark": dark version of header e.g. class="header dark clearfix" -->
<!-- "centered": mandatory class for the centered logo layout -->
<!-- ================ -->
<header class="header fixed fixed-desktop clearfix">
    <div class="container">
        <div class="row">
            <div class="col-md-auto hidden-md-down pl-3">
                <!-- header-first start -->
                <!-- ================ -->
                <div class="header-first clearfix">

                    <!-- logo -->
                    <div id="logo" class="logo">
                        <a href="..\..\..\..\index.htm">
                            <img alt="FlashAir logo" src="..\..\..\..\..\images\assets\flashairLogo_official_small2.png">
                            &nbsp;FlashAir&trade; Developers
                        </a>
                    </div>

                </div>
                <!-- header-first end -->

            </div>
            <div class="col-lg-7 ml-lg-auto">

                <!-- header-second start -->
                <!-- ================ -->
                <div class="header-second clearfix">

                    <!-- main-navigation start -->
                    <!-- classes: -->
                    <!-- "onclick": Makes the dropdowns open on click, this the default bootstrap behavior e.g. class="main-navigation onclick" -->
                    <!-- "animated": Enables animations on dropdowns opening e.g. class="main-navigation animated" -->
                    <!-- ================ -->
                    <div class="main-navigation main-navigation--mega-menu  animated">
                        <nav class="navbar navbar-expand-lg navbar-light p-0">
                            <div class="navbar-brand clearfix hidden-lg-up">

                                <!-- logo -->
                                <div id="logo-mobile" class="logo">
                                    <a href="..\..\..\..\index.htm">
                                        <img alt="FlashAir logo" src="..\..\..\..\..\images\assets\flashairLogo_official_small2.png">
                                        &nbsp;FlashAir&trade; Developers
                                    </a>
                                </div>

                            </div>
                            <!-- header dropdown buttons -->
                            <div class="header-dropdown-buttons hidden-lg-up p-0 ml-auto mr-3">
                                <div class="btn-group">
                                    <button type="button" class="btn dropdown-toggle dropdown-toggle--no-caret" id="header-drop-3" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                                        <i class="fa fa-search"></i>
                                    </button>
                                    <ul class="dropdown-menu dropdown-menu-right dropdown-animation" aria-labelledby="header-drop-3">
                                        <li>
                                            <form role="search" class="search-box margin-clear" id="cse-search-box" action="http://google.com/cse">
                                                <div class="form-group has-feedback">
                                                    <input type="hidden" name="cx" value="015318272157664795635:6mtpckrtgrq">
                                                    <input type="hidden" name="ie" value="UTF-8">
                                                    <input type="text" name="q" size="31" class="form-control">
                                                    <input type="submit" name="sa" value="Search">
                                                </div>
                                            </form>
                                            <script type="text/javascript" src="http://www.google.com/cse/brand?form=cse-search-box&lang=ja"></script>
                                        </li>
                                    </ul>
                                </div>
                            </div>
                            <!-- header dropdown buttons end -->
                            <button class="navbar-toggler" type="button" data-toggle="collapse" data-target="#navbar-collapse-1" aria-controls="navbar-collapse-1" aria-expanded="false" aria-label="Toggle navigation">
                                <span class="navbar-toggler-icon"></span>
                            </button>

                            <div class="collapse navbar-collapse" id="navbar-collapse-1">
                                <!-- main-menu -->
                                <ul class="navbar-nav ml-xl-auto">
                                    <li class="nav-item dropdown"> <a href="#" class="nav-link dropdown-toggle" id="first-dropdown" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">Discover</a>
                                        <ul class="dropdown-menu" aria-labelledby="first-dropdown">
                                            <li>
                                                <a href="..\..\..\..\discover\overview\index.htm">What's FlashAir?</a>
                                            </li>
                                            <li>
                                                <a href="..\..\..\..\discover\overview\w04\index.htm">Fourth generation FlashAir W-04</a>
                                            </li>
                                            <li>
                                                <a href="..\..\..\..\discover\gettingstarted\index.htm">Getting Started</a>
                                            </li>
                                            <li>
                                                <a href="..\..\..\..\discover\beginners\index.htm">Beginners Guide with FlashAir
                                                    Development</a>
                                            </li>
                                            <li>
                                                <a href="..\..\..\..\discover\usage\index.htm">Get started with FlashAir</a>
                                            </li>
                                            <li>
                                                <a href="..\..\..\..\discover\app\index.htm">Overview of FlashAir Application
                                                    Development</a>
                                            </li>
                                            <li>
                                                <a href="..\..\..\..\discover\device\index.htm">Overview of using Devices with FlashAir</a>
                                            </li>
                                            <li>
                                                <a href="https://iot-hub.flashair-developers.com/en/" target="_blank">FlashAir
                                                    IoT Hub
                                                    <i class="fa fa-external-link"></i>
                                                </a>
                                            </li>
                                        </ul>
                                    </li>
                                    <li class="nav-item dropdown"> <a href="#" class="nav-link dropdown-toggle" id="second-dropdown" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">Application</a>
                                        <ul class="dropdown-menu" aria-labelledby="second-dropdown">
                                            <li>
                                                <a href="..\..\..\..\application\iot\index.htm">Application to IoT</a>
                                            </li>
                                            <li>
                                                <a href="..\..\..\..\application\devices\index.htm">Using with Devices</a>
                                            </li>
                                            <li>
                                                <a href="..\..\..\..\application\workflow\index.htm">Improve efficiency of operations</a>
                                            </li>
                                            <li>
                                                <a href="..\..\..\..\application\share-documents\index.htm">Sharing Documents</a>
                                            </li>
                                            <li>
                                                <a href="..\..\..\..\application\users\index.htm">User's Projects</a>
                                            </li>
                                            <li>
                                                <a href="..\..\..\..\application\showcase\index.htm">App Showcase</a>
                                            </li>
                                        </ul>
                                    </li>
                                    <li class="nav-item dropdown active"> <a href="#" class="nav-link dropdown-toggle" id="third-dropdown" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">Resources</a>
                                        <ul class="dropdown-menu" aria-labelledby="third-dropdown">
                                            <li class="dropdown ">
                                                <a class="dropdown-toggle" data-toggle="dropdown" href="#">Tutorials</a>
                                                <ul class="dropdown-menu to-left">
                                                    <li><a href="..\..\ios\index.htm">iOS</a></li>
                                                    <li><a href="..\index.htm">Android</a></li>
                                                    <li><a href="..\..\web\index.htm">Web browser</a></li>
                                                    <li><a href="..\..\advanced\index.htm">Advanced</a></li>
                                                    <li><a href="..\..\isdio\index.htm">iSDIO</a></li>
                                                    <li><a href="..\..\lua\index.htm">Lua</a></li>
                                                    <li><a href="..\..\users\index.htm">User's Tutorials</a></li>
                                                    <li><a href="..\..\iot-hub\index.htm">FlashAir IoT Hub</a></li>
                                                </ul>
                                            </li>
                                            <li class="dropdown ">
                                                <a class="dropdown-toggle" data-toggle="dropdown" href="#">API Guide</a>
                                                <ul class="dropdown-menu to-left">
                                                    <li><a href="..\..\..\api\commandcgi\index.htm">command.cgi</a></li>
                                                    <li><a href="..\..\..\api\configcgi\index.htm">config.cgi</a></li>
                                                    <li><a href="..\..\..\api\thumbnailcgi\index.htm">thumbnail.cgi</a></li>
                                                    <li><a href="..\..\..\api\uploadcgi\index.htm">upload.cgi</a></li>
                                                    <li><a href="..\..\..\api\config\index.htm">CONFIG</a></li>
                                                    <li><a href="..\..\..\api\utility\index.htm">Browser Utility</a></li>
                                                    <li><a href="..\..\..\api\lua\index.htm">Lua Scripting</a></li>
                                                    <li><a href="..\..\..\api\isdio\index.htm">iSDIO</a></li>
                                                    <li><a href="..\..\..\api\fw40003\index.htm">About FW 4.00.03</a></li>
                                                </ul>
                                            </li>
                                            <li>
                                                <a href="..\..\..\resources\index.htm">Developer Resources</a>
                                            </li>
                                            <li>
                                                <a href="..\..\..\books\index.htm">Books</a>
                                            </li>
                                            <li>
                                                <a href="..\..\..\..\about\events\index.htm">Events</a>
                                            </li>
                                        </ul>
                                    </li>
                                    <li class="nav-item dropdown"> <a href="#" class="nav-link dropdown-toggle" id="fourth-dropdown" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">Support</a>
                                        <ul class="dropdown-menu" aria-labelledby="fourth-dropdown">
                                            <li>
                                                <a href="..\..\..\..\support\index.htm">Support</a>
                                            </li>
                                            <li>
                                                <a href="..\..\..\..\support\forum\index.htm">Developer Forum</a>
                                            </li>
                                            <li>
                                                <a href="..\..\..\..\support\faq\index.htm">FAQ</a>
                                            </li>
                                            <li>
                                                <a href="..\..\..\..\support\iot-hub\index.htm">About FlashAir IoT Hub service end</a>
                                            </li>
                                            <li>
                                                <a href="..\..\..\..\support\developers\index.htm">About FlashAir Developers site closure</a>
                                            </li>                
                                        </ul>
                                    </li>
                                </ul>
                                <!-- main-menu end -->
                            </div>
                        </nav>
                    </div>
                    <!-- main-navigation end -->
                </div>
                <!-- header-second end -->

            </div>
            <div class="col-auto hidden-md-down">
                <!-- header dropdown buttons -->
                <div class="header-dropdown-buttons">
                    <div class="btn-group">
                        <button type="button" class="btn dropdown-toggle dropdown-toggle--no-caret" id="header-drop-1" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                            <i class="fa fa-search"></i>
                        </button>
                        <ul class="dropdown-menu dropdown-menu-right dropdown-animation" aria-labelledby="header-drop-3">
                            <li>
                                <form role="search" class="search-box margin-clear" id="cse-search-box" action="http://google.com/cse" target="_blank">
                                    <div class="form-group has-feedback">
                                        <input type="hidden" name="cx" value="015318272157664795635:6mtpckrtgrq">
                                        <input type="hidden" name="ie" value="UTF-8">
                                        <input type="text" name="q" size="31" class="form-control">
                                        <input type="submit" name="sa" value="Search">
                                    </div>
                                </form>
                                <script type="text/javascript" src="http://www.google.com/cse/brand?form=cse-search-box&lang=ja"></script>
                            </li>
                        </ul>
                    </div>
                </div>
                <!-- header dropdown buttons end -->
            </div>
        </div>
    </div>
    <!-- header end -->
    <!-- Google Analytics Tracking Code -->
    <script>
        (function (i, s, o, g, r, a, m) {
            i['GoogleAnalyticsObject'] = r;
            i[r] = i[r] || function () {
                (i[r].q = i[r].q || []).push(arguments)
            }, i[r].l = 1 * new Date();
            a = s.createElement(o),
                m = s.getElementsByTagName(o)[0];
            a.async = 1;
            a.src = g;
            m.parentNode.insertBefore(a, m)
        })(window, document, 'script', 'https://www.google-analytics.com/analytics.js', 'ga');

        ga('create', 'UA-498925-24', 'auto');
        ga('send', 'pageview');
    </script>
</header>
        </div>
        <!-- header-container end -->

        <!-- main-container start -->
        <!-- ================ -->
        <section class="main-container">

            <div class="container">
                <div class="row">

                    <!-- main start -->
                    <!-- ================ -->
                    <div class="main col-lg-9 order-lg-2 pb-5">

                        <!-- page-title start -->
                        <!-- ================ -->
                        <h1 class="page-title">
                            Changing SSID and Network Password</h1>
                        <p class="small text-muted">Latest update: August 2013</p>
                        <!-- page-title end -->

                        <p class="mt-5">
                            <strong>In this tutorial, we will show you how to change your FlashAir SSID and network
                                password via
                                an Android Application. We will use
                                <a href="..\..\..\api\commandcgi\index.htm">command.cgi</a> and
                                <a href="..\..\..\api\configcgi\index.htm">config.cgi</a> to do this.</strong>
                        </p>

                        <p>We will show you how to create an Android app that will allow you to view your current
                            FlashAir SSID
                            and password as well as set a new SSID and password. We will set up two separate screens
                            for
                            this application. </p>

                        <p>The first screen will contain two
                            <code>Button</code> objects: </p>

                        <div class="m-3">
                            <img class="img-thumbnail mx-auto d-block" src="..\..\..\..\..\images\tutorials\android_tutorial_06_1.png" alt="This image shows the first screen with only the two buttons" title="">
                        </div>

                        <p>Pressing "Get" will allow you to view your current SSID and password in the text fields
                            below: </p>

                        <div class="m-3">
                            <img class="img-thumbnail mx-auto d-block" src="..\..\..\..\..\images\tutorials\android_tutorial_06_2.png" alt="This image shows the get screen with SSID and password" title="">
                        </div>

                        <p>Pressing "Set" will send you to the next screen, where you can set your new SSID and
                            password: </p>

                        <div class="m-3">
                            <img class="img-thumbnail mx-auto d-block" src="..\..\..\..\..\images\tutorials\android_tutorial_06_3.png" alt="This image shows the set screen with empty text fields" title="">
                        </div>

                        <p>We will need to create the following files in order to write this application: </p>

                        <ul>
                            <li>
                                <em>MainActivity.java</em>
                            </li>
                            <li>
                                <em>activity_main.xml</em>
                            </li>
                            <li>
                                <em>SetScreenActivity.java</em>
                            </li>
                            <li>
                                <em>activity_set_screen.xml</em>
                            </li>
                        </ul>

                        <p>
                            <span class="badge badge-danger">Important:</span> Please note that your project contains a
                            file called
                            <em>AndroidManifest.xml</em>. This file gives your application particular permissions. By
                            default,
                            applications are not permitted to access the internet. The path to this file should look
                            something
                            like:
                            <em>[Project_Folder]/AndroidManifest.xml</em>
                            <br> You will need to add the following lines of code into your
                            <em>AndroidManifest.xml</em> in order for this application to work:</p>

                        <pre class="prettyprint linenums"><code>&lt;uses-permission android:name="android.permission.INTERNET" /&gt;
</code></pre>

                        <p>First, we will write the
                            <em>activity_main.xml</em> file that determines the layout of our Android App. This can be
                            found
                            in your layout folder. The path to this file should look something like:
                            <em>[Project_Folder]/res/layout/activity_main.xml</em>
                        </p>

                        <h2>
                            Creating the Get Screen Layout
                        </h2>
                        <div class="separator-2"></div>

                        <p>You want the
                            <em>activity_main.xml</em> file to look like this: </p>

                        <h4>
                            <em>activity_main.xml</em>
                        </h4>

                        <pre class="prettyprint linenums"><code>&lt;LinearLayout xmlns:android="http://schemas.android.com/apk/res/android"
    xmlns:tools="http://schemas.android.com/tools"
    android:layout_width="fill_parent"
    android:layout_height="match_parent"
    android:gravity="center_horizontal"
    android:orientation="vertical"
    tools:context=".MainActivity" &gt;

    &lt;Button
        android:id="@+id/button1"
        android:layout_width="match_parent"
        android:layout_height="wrap_content"
        android:cacheColorHint="#00000000"
        android:text="Get"
        android:textColor="@android:color/white"
        android:textSize="20sp" /&gt;

    &lt;Button
        android:id="@+id/button2"
        android:layout_width="match_parent"
        android:layout_height="wrap_content"
        android:cacheColorHint="#00000000"
        android:text="Set"
        android:textColor="@android:color/white"
        android:textSize="20sp" /&gt;

    &lt;TextView
        android:id="@+id/SSIDlabelView"
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:layout_gravity="left"
        android:layout_marginTop="25dp"
        android:paddingLeft="10dp"
        android:text="SSID:"
        android:textSize="18sp" /&gt;

    &lt;TextView
        android:id="@+id/textView4"
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:textSize="18sp"
        android:text="Current SSID will be here" /&gt;

    &lt;TextView
        android:id="@+id/passwordView"
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:layout_gravity="left"
        android:layout_marginTop="25dp"
        android:paddingLeft="10dp"
        android:text="Password:"
        android:textSize="18sp" /&gt;

    &lt;TextView
        android:id="@+id/textView5"
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:textSize="18sp"
        android:text="Current password will be here" /&gt;

&lt;/LinearLayout&gt;
</code></pre>

                        <h2>
                            Creating the Set Screen Layout
                        </h2>
                        <div class="separator-2"></div>

                        <p>Next, we will edit the
                            <em>activity_set_screen.xml</em> file that determines the layout of the screen where you
                            can set
                            a new SSID and password. This screen will consist of four editable text fields where you
                            will
                            input the necessary information to make network changes. Due to the way the fields have
                            been
                            set in this .xml file, a keyboard will pop up each time the user selects one of the text
                            input
                            fields. </p>

                        <p>This file can also be found in your layout folder. The path to this file should look
                            something like:
                            <em>[Project_Folder]/res/layout/activity_set_screen.xml</em>
                        </p>

                        <h4>
                            <em>activity_set_screen.xml</em>
                        </h4>

                        <pre class="prettyprint linenums"><code>&lt;LinearLayout xmlns:android="http://schemas.android.com/apk/res/android"
    xmlns:tools="http://schemas.android.com/tools"
    android:layout_width="fill_parent"
    android:layout_height="match_parent"
    android:gravity="center_horizontal"
    android:orientation="vertical"
    tools:context=".MainActivity" &gt;

    &lt;Button
        android:id="@+id/button1"
        android:layout_width="match_parent"
        android:layout_height="wrap_content"
        android:cacheColorHint="#00000000"
        android:text="Back"
        android:textColor="@android:color/white"
        android:textSize="20sp" /&gt;

    &lt;TextView
        android:id="@+id/mastercodeView"
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:layout_gravity="left"
        android:layout_marginTop="12dp"
        android:paddingLeft="10dp"
        android:text="Mastercode:"
        android:textSize="18sp" /&gt;

    &lt;EditText
        android:id="@+id/editMC"
        android:layout_width="match_parent"
        android:layout_height="wrap_content"
        android:ems="10"
        android:hint="Mastercode"
        android:inputType="text"
        android:textStyle="italic" /&gt;

    &lt;TextView
        android:id="@+id/warningView"
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:layout_gravity="left"
        android:layout_marginTop="8dp"
        android:paddingLeft="10dp"
        android:text="Warning: We have displayed the Mastercode in this tutorial application to demonstrate how the FlashAir device works. This information is provided for tutorial purposes only. For security reasons, we highly discourage you from publicly displaying your Mastercode."
        android:textSize="12sp"
        android:textStyle="italic" /&gt;

    &lt;TextView
        android:id="@+id/SSIDlabelView"
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:layout_gravity="left"
        android:layout_marginTop="20dp"
        android:paddingLeft="10dp"
        android:text="SSID:"
        android:textSize="18sp" /&gt;

    &lt;EditText
        android:id="@+id/editText1"
        android:layout_width="match_parent"
        android:layout_height="wrap_content"
        android:ems="10"
        android:hint="New SSID"
        android:inputType="text"
        android:textStyle="italic" &gt;

    &lt;/EditText&gt;

    &lt;TextView
        android:id="@+id/passwordView"
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:layout_gravity="left"
        android:layout_marginTop="20dp"
        android:paddingLeft="10dp"
        android:text="Password:"
        android:textSize="18sp" /&gt;

    &lt;EditText
        android:id="@+id/editText2"
        android:layout_width="match_parent"
        android:layout_height="wrap_content"
        android:ems="10"
        android:hint="New Password"
        android:inputType="textPassword"
        android:textStyle="italic" /&gt;

     &lt;EditText
         android:id="@+id/editText3"
         android:layout_width="match_parent"
         android:layout_height="wrap_content"
         android:ems="10"
         android:hint="New Password"
         android:inputType="textPassword"
         android:textStyle="italic" /&gt;

    &lt;Button
        android:id="@+id/button2"
        android:layout_width="match_parent"
        android:layout_height="wrap_content"
        android:layout_marginTop="12dp"
        android:cacheColorHint="#00000000"
        android:text="Done"
        android:textColor="@android:color/white"
        android:textSize="20sp" /&gt;

&lt;/LinearLayout&gt;
</code></pre>

                        <h2>
                            Creating the Get Screen
                        </h2>
                        <div class="separator-2"></div>

                        <p>First, we will initialize the two
                            <code>Button</code> objects that will allow you to get and set your SSID and password and
                            set their
                            behaviors. We will also implement the fetching SSID and network password portion of this
                            application
                            here. </p>

                        <h3>
                            Initialization
                        </h3>

                        <p>We will start by declaring member variables and setting up the screen format. Then we will
                            declare
                            and set an
                            <code>onClickListener</code> for each
                            <code>Button</code>. Since their behavior is different, we will have to write two separate
                            <code>onClick()</code> functions: </p>

                        <h4>
                            <em>MainActivity.java</em> (1)</h4>

                        <pre class="prettyprint linenums"><code>public class MainActivity extends Activity {

    TextView SSID;
    TextView password;
    Button getButton;
    Button setButton;

    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_main);
        getWindow().setTitleColor(Color.rgb(65, 183, 216));
        getButton = (Button)findViewById(R.id.button1);
        setButton = (Button)findViewById(R.id.button2);
        getButton.getBackground().setColorFilter(Color.rgb(65, 183, 216), PorterDuff.Mode.SRC_IN);
        setButton.getBackground().setColorFilter(Color.rgb(65, 183, 216), PorterDuff.Mode.SRC_IN);
        try {
            getButton.setOnClickListener(new View.OnClickListener() {
                @Override
                public void onClick(View v) {
                    // Set button to show current SSID and Password
                    getSSID();
                    getPassword();
                }
            });
        } catch(Exception e) {
            Log.e("ERROR", "ERROR: " + e.toString());
            e.printStackTrace();
        }
        try {
            setButton.setOnClickListener(new View.OnClickListener() {
                @Override
                public void onClick(View v) {
                    // Set button to start new intent to allow new SSID and password input
                    Intent setSSIDPassword = new Intent(getBaseContext(), SetScreenActivity.class);
                    MainActivity.this.startActivity(setSSIDPassword);
                }
            });
        } catch(Exception e) {
            Log.e("ERROR", "ERROR: " + e.toString());
            e.printStackTrace();
        }
    }


    @Override
    public boolean onCreateOptionsMenu(Menu menu) {
        // Inflate the menu; this adds items to the action bar if it is present.
        getMenuInflater().inflate(R.menu.main, menu);
        return true;
    }
</code></pre>

                        <p>In lines 18-25, we set the click listener for the
                            <code>getButton</code>. When this
                            <code>Button</code> is clicked, it calls a function that will attempt to fetch the current
                            SSID of
                            the FlashAir and a then another function that attempts to fetch the current network
                            password
                            of the FlashAir (both are implemented below).</p>

                        <p>In lines 33-38, we set the click listener for the
                            <code>setButton</code>. As the SSID and password are set using another
                            <code>class</code> with a separate screen, this listener merely sets an
                            <code>Intent</code> to start the next screen. No additional information needs to be passed
                            to the next
                            <code>Activity</code>, so we will not be sending any extra
                            <code>Bundle</code> data.</p>

                        <h3>
                            Getting the SSID
                        </h3>

                        <p>The
                            <code>getSSID()</code> function called in the function above is the function that handles
                            requesting
                            and fetching the current SSID from the FlashAir device. The SSID of a FlashAir device is
                            not
                            guaranteed to have a fixed length (it can be up to 32 characters). </p>

                        <p>We will use the following CGI command to get the current SSID:</p>

                        <ul>
                            <li>
                                <code>command.cgi</code> with
                                <code>op=104</code>
                                <ul>
                                    <li>
                                        The command will look like this:
                                        <code>http://flashair/command.cgi?op=104</code>
                                    </li>
                                    <li>
                                        The command will return the following information about the directory:
                                        <code>&lt;SSID&gt;</code>
                                    </li>
                                </ul>
                            </li>
                        </ul>

                        <p>To execute this CGI command, we will reuse the
                            <em>FlashAirRequest.java</em> file from
                            <a href="..\3\index.htm">Android Tutorial 3: Downloading Content</a>:
                        </p>

                        <h4>
                            <em>MainActivity.java</em> (2)</h4>

                        <pre class="prettyprint linenums"><code>    public void getSSID() {
        new AsyncTask&lt;String, Void, String&gt;(){
            @Override
            protected String doInBackground(String... params) {
                return FlashAirRequest.getString(params[0]);
            }
            @Override
            protected void onPostExecute(String currentSSID) {
                SSID = (TextView)findViewById(R.id.textView4);
                SSID.setText(currentSSID);
            }
        }.execute("http://flashair/command.cgi?op=104");
    }
</code></pre>

                        <h3>
                            Getting the Network Password
                        </h3>

                        <p>The
                            <code>getPassword()</code> function called in the
                            <code>onClick()</code> function above handles requesting and fetching the current network
                            password
                            from the FlashAir device. The network password of a FlashAir device is not guaranteed to
                            have
                            a fixed length (it can be up to 64 characters). </p>

                        <p>We will use the following CGI command to get the current network password:</p>

                        <ul>
                            <li>
                                <code>command.cgi</code> with
                                <code>op=105</code>
                                <ul>
                                    <li>
                                        The command will look like this:
                                        <code>http://flashair/command.cgi?op=105</code>
                                    </li>
                                    <li>
                                        The command will return the following information about the directory:
                                        <code>&lt;networkPassword&gt;</code>
                                    </li>
                                </ul>
                            </li>
                        </ul>

                        <p>To execute this CGI command, we will reuse the
                            <em>FlashAirRequest.java</em> file from
                            <a href="..\3\index.htm">Android Tutorial 3: Downloading Content</a>:
                        </p>

                        <h4>
                            <em>MainActivity.java</em> (3)</h4>

                        <pre class="prettyprint linenums"><code>    public void getPassword() {
        new AsyncTask&lt;String, Void, String&gt;(){
            @Override
            protected String doInBackground(String... params) {
                return FlashAirRequest.getString(params[0]);
            }
            @Override
            protected void onPostExecute(String currentPassword) {
                password = (TextView)findViewById(R.id.textView5);
                password.setText(currentPassword);
            }
        }.execute("http://flashair/command.cgi?op=105");
    }
</code></pre>

                        <p>Now we will write the
                            <code>SetScreenActivity</code>, which handles all of the user interaction after the
                            <code>setButton</code> is pressed.</p>

                        <h2>
                            Creating the Set Screen
                        </h2>
                        <div class="separator-2"></div>

                        <p>
                            <span class="badge badge-warning">Warning:</span> In order to set a new SSID or network
                            password on your FlashAir device, you will
                            need the Mastercode for your FlashAir device. This can be found by inserting your FlashAir
                            into
                            a PC or Mac and opening the CONFIG file of the FlashAir device. The CONFIG file is found in
                            the
                            "/SD_WLAN/" directory of the FlashAir device and should be opened in a text editor. You can
                            check
                            the Mastercode only when you finished FlashAir initial setting. There are hidden attributes
                            attached
                            to this directory, therefore we will use tools to handle this hidden folder.
                            <br> The Mastercode will be listed in this file: </p>

                        <div class="m-3">
                            <img class="img-thumbnail mx-auto d-block" src="..\..\..\..\..\images\tutorials\ios_tutorial_06_5.png" alt="This image shows the Mastercode in the config file" title="">
                        </div>

                        <p>Once you have the Mastercode, you will be able to use the
                            <a href="..\..\..\api\configcgi\index.htm">config.cgi</a> commands. </p>

                        <h3>
                            Initialization
                        </h3>

                        <p>We will set up two buttons for this screen: one to allow the user to go back to the first
                            screen
                            (cancelling any input on this screen) and another to submit the new SSID and network
                            password
                            to the FlashAir. This second
                            <code>Button</code> will be labelled 'Done' and will be disabled until the user has typed
                            input into
                            all of the text fields.</p>

                        <p>As this new screen requires the user to input text, we will initialize
                            <code>EditText</code> fields for the user to type into as well as a
                            <code>TextWatcher</code> that will monitor the input fields. We will need to have a total
                            of four editable
                            text fields, one each for the Mastercode, new SSID, new network password, and a
                            confirmation
                            of the new network password (to avoid typos). We will override the
                            <code>TextWatcher class</code> to create a custom
                            <code>fieldWatcher</code>. Our
                            <code>fieldWatcher</code> will check if all the
                            <code>EditText</code> fields contain some typed input and will then enable the
                            <code>Button</code> that allows the user to submit the CGI command. </p>

                        <h4>
                            <em>SetScreenActivity.java</em> (1)</h4>

                        <pre class="prettyprint linenums"><code>public class SetScreenActivity extends Activity {

    EditText mastercodeField;
    EditText SSIDfield;
    EditText passwordField;
    EditText passwordField2;
    Button backButton;
    Button doneButton;
    String newSSID = "";
    String newPassword = "";
    String newPassword2 = "";
    String mastercode = "";
    Boolean SSIDset = false;
    Boolean passwordSet = false;
    TextWatcher fieldWatcher = new TextWatcher(){
        @Override
        public void afterTextChanged(Editable e) {
            if(mastercodeField.getText().toString().isEmpty() 
               || SSIDfield.getText().toString().isEmpty()
               || passwordField.getText().toString().isEmpty()
               || passwordField2.getText().toString().isEmpty() ) {
                doneButton.setEnabled(false);
            }
            else {
                doneButton.setEnabled(true);
            }
        }

        @Override
        public void beforeTextChanged(CharSequence cs, int start, int count, int after) {
            // Do nothing
        }

        @Override
        public void onTextChanged(CharSequence cs, int start, int before, int count) {
            // Do nothing
        }
    };
</code></pre>

                        <p>Lines 17-27 assign the
                            <code>fieldWatcher</code> to check if all the text fields have some input whenever the user
                            changes
                            the content in a text field. This check is what controls the
                            <code>doneButton</code>. </p>

                        <p>If the check determines that there is some input in each text field, the
                            <code>doneButton</code> will be enabled: </p>

                        <div class="m-3">
                            <img class="img-thumbnail mx-auto d-block" src="..\..\..\..\..\images\tutorials\android_tutorial_06_5.png" alt="This image shows the set screen with enabled Done button" title="">
                        </div>

                        <p>However, if the user clears the input in any of the text fields, the
                            <code>doneButton</code> will immediately be disabled: </p>

                        <div class="m-3">
                            <img class="img-thumbnail mx-auto d-block" src="..\..\..\..\..\images\tutorials\android_tutorial_06_4.png" alt="This image shows the set screen with disabled Done button" title="">
                        </div>

                        <p>Now we will overwrite the
                            <code>onCreate(Bundle savedInstanceState)</code> function that initializes every
                            <code>Activity</code>. In this function, we will set the format for the window, identify
                            all the .xml
                            elements, and get the
                            <code>Intent</code> passed by
                            <code>class MainActivity</code>. We will also set the
                            <code>fieldWatcher</code> (which we wrote in the code above) to monitor each of the
                            <code>EditText</code> fields.</p>

                        <h4>
                            <em>SetScreenActivity.java</em> (2)</h4>

                        <pre class="prettyprint linenums"><code>    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_set_screen);
        getWindow().setTitleColor(Color.rgb(65, 183, 216));
        backButton = (Button)findViewById(R.id.button1);
        doneButton = (Button)findViewById(R.id.button2);
        backButton.getBackground().setColorFilter(Color.rgb(65, 183, 216), PorterDuff.Mode.SRC_IN);
        doneButton.getBackground().setColorFilter(Color.rgb(65, 183, 216), PorterDuff.Mode.SRC_IN);
        doneButton.setEnabled(false); // Disable until text fields have been filled
        mastercodeField = (EditText)findViewById(R.id.editMC);
        SSIDfield = (EditText)findViewById(R.id.editText1);
        passwordField = (EditText)findViewById(R.id.editText2);
        passwordField2 = (EditText)findViewById(R.id.editText3);
        mastercodeField.setHintTextColor(Color.rgb(65, 183, 216));
        SSIDfield.setHintTextColor(Color.rgb(65, 183, 216));
        passwordField.setHintTextColor(Color.rgb(65, 183, 216));
        passwordField2.setHintTextColor(Color.rgb(65, 183, 216));
        try {
            getIntent();
            backButton.setOnClickListener(new View.OnClickListener() {
                @Override
                public void onClick(View v) {
                    SetScreenActivity.this.finish();
                }
            });
            doneButton.setOnClickListener(new View.OnClickListener() {
                @Override
                public void onClick(View v) {
                    getInput();
                    setNewSSIDPassword();
                }
            });
            mastercodeField.addTextChangedListener(fieldWatcher);
            SSIDfield.addTextChangedListener(fieldWatcher);
            passwordField.addTextChangedListener(fieldWatcher);
            passwordField2.addTextChangedListener(fieldWatcher);
        } catch(Exception e) {
            Log.e("ERROR", "ERROR: " + e.toString());
            e.printStackTrace();
        }
    }


    @Override
    public boolean onCreateOptionsMenu(Menu menu) {
        // Inflate the menu; this adds items to the action bar if it is present.
        getMenuInflater().inflate(R.menu.set_screen, menu);
        return true;
    }
</code></pre>

                        <p>Line 10 disables the
                            <code>doneButton</code> as soon as it is instantiated. This is so the user will not be able
                            to submit
                            the CGI command to the FlashAir until each parameter of the CGI command has some input.
                            This
                            will help to avoid errors when the CGI command is executed.</p>

                        <p>In lines 11-18, we identify the text input fields and provide the text hint that is
                            displayed on
                            the fields (until the user provides input).</p>

                        <p>In lines 34-37, we add our
                            <code>fieldWatcher</code> to each of the text fields so the app will be aware whenever the
                            user provides
                            or removes input.</p>

                        <h3>
                            Getting Text Input
                        </h3>

                        <p>The following function will capture the user's text input. This function is called by the
                            <code>onClick()</code> function that is attached to the
                            <code>doneButton</code>. Only after
                            <code>fieldWatcher</code> detects that the user has input text into all four
                            <code>EditText</code> fields will the actual text be captured and stored.</p>

                        <h4>
                            <em>SetScreenActivity.java</em> (3)</h4>

                        <pre class="prettyprint linenums"><code>    public void getInput() {
            mastercode = mastercodeField.getText().toString();
            newSSID = SSIDfield.getText().toString();
            newPassword = passwordField.getText().toString();
            newPassword2 = passwordField2.getText().toString();
    }
</code></pre>

                        <h3>
                            Confirming Input Passwords Match
                        </h3>

                        <p>In order to avoid typos when entering the new network password, this application requires
                            the user
                            to type in the password twice and then checks to see if the two entries match. The
                            following
                            function checks to see if the two password entries match, and if so, will indicate that it
                            is
                            safe to proceed with the CGI command.</p>

                        <h4>
                            <em>SetScreenActivity.java</em> (4)</h4>

                        <pre class="prettyprint linenums"><code>    public Boolean passwordConfirmed() {
        if(newPassword.equals(newPassword2)) {
            return true;
        }
        return false;
    }
</code></pre>

                        <p>If
                            <code>passwordConfirmed()</code> returns
                            <code>false</code>, the function implemented below (
                            <code>setNewSSIDPassword()</code>) will clear the password input fields (disabling the
                            <code>doneButton</code>) and show a
                            <code>Toast</code> to indicate to the user that there was a password mismatch:</p>

                        <div class="m-3">
                            <img class="img-thumbnail mx-auto d-block" src="..\..\..\..\..\images\tutorials\android_tutorial_06_8.png" alt="This image shows the set screen with the password mismatch toast" title="">
                        </div>

                        <h3>
                            Setting the SSID &amp; Network Password
                        </h3>

                        <p>The following function sends the CGI command to the FlashAir device and handles its
                            response. It
                            calls the above
                            <code>passwordConfirmed()</code> function before it makes the request to ensure that the
                            password is
                            correctly typed. </p>

                        <p>We will use the following CGI command to set the SSID: </p>

                        <ul>
                            <li>
                                <code>config.cgi</code> with the Mastercode and new SSID as parameters
                                <ul>
                                    <li>
                                        If Mastercode = 0123456789AB and SSID = flashair, the command will look like
                                        this:
                                        <br>
                                        <code>http://flashair/config.cgi?MASTERCODE=0123456789AB&amp;APPSSID=flashair</code>
                                    </li>
                                    <li>
                                        The command will return the following data:

                                        <ul>
                                            <li>
                                                <code>SUCCESS</code> if the FlashAir SSID was successfully changed
                                            </li>
                                            <li>
                                                <code>ERROR</code> if the FlashAir SSID change failed
                                            </li>
                                        </ul>
                                    </li>
                                </ul>
                            </li>
                        </ul>

                        <p>We will use the following CGI command to set the network password: </p>

                        <ul>
                            <li>
                                <code>config.cgi</code> with the Mastercode and new network password as parameters
                                <ul>
                                    <li>
                                        If Mastercode = 0123456789AB and password = 12345678, the command will look
                                        like this:
                                        <br>
                                        <code>http://flashair/config.cgi?MASTERCODE=0123456789AB&amp;APPNETWORKKEY=12345678</code>
                                    </li>
                                    <li>
                                        The command will return the following data:
                                        <ul>
                                            <li>
                                                <code>SUCCESS</code> if the FlashAir network password was successfully
                                                changed
                                            </li>
                                            <li>
                                                <code>ERROR</code> if the FlashAir network password change failed
                                            </li>
                                        </ul>
                                    </li>
                                </ul>
                            </li>
                        </ul>

                        <p>We will combine these commands in the function below to become:
                            <code>http://flashair/config.cgi?MASTERCODE=0123456789AB&amp;APPNETWORKKEY=12345678&amp;APPSSID=flashair</code>
                        </p>

                        <p>The new SSID must be between 1 and 32 characters and the new password must be between 8 and
                            64 characters.
                            If either of these conditions fail, the CGI command will fail. </p>

                        <p>To execute this CGI command, we will reuse the
                            <em>FlashAirRequest.java</em> file from
                            <a href="..\3\index.htm">Android Tutorial 3: Downloading Content</a>:
                        </p>

                        <h4>
                            <em>SetScreenActivity.java</em> (5)</h4>

                        <pre class="prettyprint linenums"><code>public void setNewSSIDPassword() {
    if(passwordConfirmed()) {

        // If passwords match, do HTTP command, catch and display if command fails
        new AsyncTask&lt;String, Void, String&gt;(){
            @Override
            protected String doInBackground(String... params) {
                return FlashAirRequest.getString(params[0]);
            }
            @Override
            protected void onPostExecute(String result) {
                if(result.toUpperCase(Locale.getDefault()).equals("SUCCESS")) {
                    Toast.makeText(SetScreenActivity.this, "Remember to reconnect to your FlashAir device using the new SSID and password!", Toast.LENGTH_LONG).show();
                    SetScreenActivity.this.finish(); // Go back to Get screen
                }
            }
        }.execute("http://flashair/config.cgi?MASTERCODE=" + mastercode + "&amp;APPNETWORKKEY=" + newPassword + "&amp;APPSSID=" + newSSID);
    }
    else {
        // If passwords don't match, display toast
        Toast.makeText(this, "Password mismatch!", Toast.LENGTH_SHORT).show();
        passwordField.setText("");
        passwordField2.setText("");
    }
}
</code></pre>

                        <p>In line 13, we have set a
                            <code>Toast</code> to remind the user that they will have to reconnect to the FlashAir
                            device. Even
                            though the screen will change and return to the first screen (containing the old SSID and
                            password
                            data), the
                            <code>Toast</code> will still be visible for some time: </p>

                        <p>At line 14, we set the function to end the current
                            <code>Activity</code> and return to the first screen (
                            <code>class MainActivity</code>) once the new SSID and password are set.</p>

                        <p>If the CGI command is successful, the Android device will no longer be connected to the
                            FlashAir
                            via Wireless LAN since the FlashAir's SSID and network password have been changed. </p>

                        <h2>
                            Result
                        </h2>
                        <div class="separator-2"></div>

                        <p>Toast will be shown to the screen like this:</p>

                        <div class="m-3">
                            <img class="img-thumbnail mx-auto d-block" src="..\..\..\..\..\images\tutorials\android_tutorial_06_6.png" alt="This image shows the get screen with the toast" title="">
                        </div>

                        <p>Once the user reconnects to the FlashAir, pressing "Get" in the app will retrieve the newly
                            changed
                            SSID and network password: </p>

                        <div class="m-3">
                            <img class="img-thumbnail mx-auto d-block" src="..\..\..\..\..\images\tutorials\android_tutorial_06_7.png" alt="This image shows the get screen with the toast" title="">
                        </div>

                        <h2>
                            Sample Code
                        </h2>
                        <div class="separator-2"></div>

                        <p>
                            <a class="btn btn-primary" href="..\..\..\..\..\files\samplecode\android\android_tutorial_06.zip" onclick="_gaq.push(['_trackEvent', 'Sample Code Download', 'android_tutorial_06.zip', 'en', true]);">
                                <i class="fa fa-download pr-10"></i> android_tutorial_06.zip</a> (532KB)</p>

                        <p>
                            <p class="small">All sample code on this page is licensed under
                                <a href="..\..\..\license\index.htm" target="_blank">BSD 2-Clause License</a>
                            </p>
                        

                        <!-- Social Buttons -->
                        <div class="clearfix">
	<ul class="social-links float-right">
		<li class="twitter">
			<!--Tweet Button-->
			<a href="https://twitter.com/share" class="twitter-share-button" {count}="" data-via="FlashAirDev" data-related="FlashAirDev">Tweet</a>
			<script>
				! function (d, s, id) {
					var js, fjs = d.getElementsByTagName(s)[0],
						p = /^http:/.test(d.location) ? 'http' : 'https';
					if (!d.getElementById(id)) {
						js = d.createElement(s);
						js.id = id;
						js.src = p + '://platform.twitter.com/widgets.js';
						fjs.parentNode.insertBefore(js, fjs);
					}
				}(document, 'script', 'twitter-wjs');
			</script>
		</li>
		<li class="facebook">
			<!--Facebook Like Button-->
			<div id="fb-root"></div>
			<script>
				(function (d, s, id) {
					var js, fjs = d.getElementsByTagName(s)[0];
					if (d.getElementById(id)) return;
					js = d.createElement(s);
					js.id = id;
					js.src = "//connect.facebook.net/en_US/all.js#xfbml=1";
					fjs.parentNode.insertBefore(js, fjs);
				}(document, 'script', 'facebook-jssdk'));
			</script>
			<div class="fb-like" data-href="https://www.flashair-developers.com/" data-send="false" data-layout="button_count" data-width="450" data-show-faces="false" data-font="verdana"></div>
		</li>		
	</ul>
</div>

                        <!-- pagination start -->
                        <nav aria-label="Page navigation">
                            <ul class="pagination justify-content-between">
                                <li>
                                    <a class="btn radius-50 page-link badge-pill" href="..\5\index.htm" aria-label="Previous">
                                        <i class="fa fa-chevron-left pr-10"></i>
                                        Auto-Refreshing Content List
                                    </a>
                                </li>
                                <li>
                                    <a class="btn radius-50 page-link badge-pill" href="..\7\index.htm" aria-label="Next">
                                        Uploading to FlashAir
                                        <i class="fa fa-chevron-right pl-10"></i>
                                    </a>
                                </li>
                            </ul>
                        </nav>
                        <!-- pagination end -->

                        <!-- Amazon bottom link -->
                        <div class="col-12">
	<!--Amazon search result for tablet-->
	<div class="amazon-widget-bottom mx-auto d-none d-md-block d-lg-none">
		<!--
<iframe src="http://rcm.amazon.com/e/cm?t=flasdeve-20&o=1&p=12&l=st1&mode=photo&search=toshiba%20flashair&fc1=333333&lt1=_blank&lc1=009BDD&bg1=FFFFFF&f=ifr" marginwidth="0" marginheight="0" width="300" height="250" border="0" frameborder="0" style="border:none;" scrolling="no"></iframe>
-->
		<div class="amazon-content" marginwidth="0" marginheight="0" width="320" height="250" border="0" frameborder="0" style="border: none;" scrolling="no"></div>
	</div>

	<!--Amazon search result for smartphone-->
	<div class="amazon-widget-mobile mx-auto d-md-none">
		<!--Image-->
		<!--
	<a href="http://www.amazon.com/gp/product/B009RGP7HY/ref=as_li_tf_il?ie=UTF8&camp=1789&creative=9325&creativeASIN=B009RGP7HY&linkCode=as2&tag=flasdeve-20" alt="TOSHIBA FlashAir SD card 8GB SD-WB008G"><img src="http://ws.assoc-amazon.com/widgets/q?_encoding=UTF8&ASIN=B009RGP7HY&Format=_SL110_&ID=AsinImage&MarketPlace=US&ServiceVersion=20070822&WS=1&tag=flasdeve-20" style="vertical-align:middle;"/></a><br>
-->
		<!--Text-->
		<!--
<a href="http://www.amazon.com/gp/product/B009RGP7HY/ref=as_li_tf_tl?ie=UTF8&camp=1789&creative=9325&creativeASIN=B009RGP7HY&linkCode=as2&tag=flasdeve-20">Find TOSHIBA FlashAir SD card 8GB SD-WB008G on Amazon.com</a><img src="http://www.assoc-amazon.com/e/ir?t=flasdeve-20&l=as2&o=1&a=B009RGP7HY" width="1" height="1" border="0" alt="" style="border:none !important; margin:0px !important;" />
-->
		<div class="amazon-content" marginwidth="0" marginheight="0" border="0" frameborder="0" style="border: none;" scrolling="no"></div>
	</div>
</div>

                    </div>
                    <!-- main end -->

                    <!-- sidebar start -->
                    <!-- ================ -->
                    <aside class="col-lg-3 col-xl-3 order-lg-1">
                        <div class="sidebar">
  <div class="block clearfix">
    <nav>
      <ul class="nav flex-column">
        <li class="nav-item"> <a class="nav-link" href="..\1\index.htm">
          Overview of FlashAir App Development for Android
          </a>
        </li>

        <li class="nav-item"> <a class="nav-link" href="..\2\index.htm">
          Getting A List of Contents
          </a>
        </li>

        <li class="nav-item"> <a class="nav-link" href="..\3\index.htm">
          Downloading Content
          </a>
        </li>

        <li class="nav-item"> <a class="nav-link" href="..\4\index.htm">
          Displaying Image Thumbnails
          </a>
        </li>

        <li class="nav-item"> <a class="nav-link" href="..\5\index.htm">
          Auto-Refreshing Content List
          </a>
        </li>

        <li class="nav-item active"> <a class="nav-link active" href="index.htm">
          Changing SSID and Network Password
          </a>
        </li>

        <li class="nav-item"> <a class="nav-link" href="..\7\index.htm">
          Uploading to FlashAir
          </a>
        </li>

        <li class="nav-item"> <a class="nav-link" href="..\8\index.htm">
          Photo Share
          </a>
        </li>
        <li>
          <br>
        </li>
        <li class="nav-item">
          <a class="nav-link" href="..\index.htm">
            Back to Content List
          </a>
        </li>
      </ul>
    </nav>
  </div>
  <p>
    <a href="..\index.htm">
      <img alt="flashair android" src="..\..\..\..\..\images\assets\flashair-android-side.png">
    </a>
  </p>

  <!-- Amazon side link -->
  <!--Amazon search result for desktop-->
<div class="amazon-widget-side d-none d-lg-block">
	<!--
	<iframe src="http://rcm.amazon.com/e/cm?t=flasdeve-20&o=1&p=14&l=st1&mode=photo&search=toshiba%20flashair&fc1=333333&lt1=_blank&lc1=009BDD&bg1=FFFFFF&f=ifr" marginwidth="0" marginheight="0" width="160" height="600" border="0" frameborder="0" style="border: medium none; float: right; font-size: 14px;" scrolling="no"></iframe>
	-->
	<div class="amazon-content" marginwidth="0" marginheight="0" width="160" height="600" border="0" frameborder="0" style="border: medium none; float: right; font-size: 14px;" scrolling="no"></div>
</div>
                    </div></aside>
                    <!-- sidebar end -->

                </div>
            </div>
        </section>
        <!-- main-container end -->

        <!-- footer start -->
        <!-- ================ -->
        <!-- footer start -->
<!-- ================ -->
<footer id="footer" class="clearfix ">

  <!-- .footer start -->
  <!-- ================ -->
  <div class="footer">
    <div class="container">
      <div class="footer-inner">
        <div class="row">
          <div class="col-lg-4">
            <div class="footer-content">
              <h2 class="title">
                <img alt="FlashAir logo" src="..\..\..\..\..\images\assets\flashairLogo_official_small2.png"> FlashAir&trade; Developers</h2>
              <div class="separator-2"></div>
              <p>
                  A technical information website for developers of Toshiba FlashAir apps or services. FlashAir Developers is operated by Fixstars in cooperation with Toshiba Memory Corporation. To learn more about Fixstars, visit
                <a target="_blank" href="http://www.fixstars.com">www.fixstars.com
                  <i class="fa fa-external-link"></i>
                </a>. ?FlashAir is a trademark of Toshiba Memory Corporation.
              </p>
              <ul class="social-links circle animated-effect-1" style="margin-bottom: 10px">
                <li class="facebook">
                  <a href="https://www.facebook.com/FlashAir-Developers-115819238627364/" target="_blank">
                    <i class="fa fa-facebook"></i>
                  </a>
                </li>
                <li class="twitter">
                  <a href="https://twitter.com/FlashAirDev/" target="_blank">
                    <i class="fa fa-twitter"></i>
                  </a>
                </li>
              </ul>
              <ul class="list-unstyled list-inline m-0">
                <li class="list-inline-item"><a href="..\..\..\..\terms-of-use\index.htm">Terms of Use</a></li>
                <li class="list-inline-item">|</li>
                <li class="list-inline-item"><a href="..\..\..\..\privacypolicy\index.htm">Privacy Policy</a></li>
              </ul>
            </div>
          </div>
          <div class="col-lg-4">
            <div class="footer-content">
              <h2 class="title">Twitter</h2>
              <div class="separator-2"></div>
              <div id="twitterWidget">
                <a class="twitter-timeline" data-theme="light" href="https://twitter.com/FlashAirDev" data-widget-id="344743426811641856" height="230" data-chrome="nofooter noheader noborders transparent">Latest News</a>
                <script>
                  ! function (d, s, id) {
                    var js, fjs = d.getElementsByTagName(s)[0],
                      p = /^http:/.test(d.location) ? 'http' : 'https';
                    if (!d.getElementById(id)) {
                      js = d.createElement(s);
                      js.id = id;
                      js.src = p + "://platform.twitter.com/widgets.js";
                      fjs.parentNode.insertBefore(js, fjs);
                    }
                  }(document, "script", "twitter-wjs");
                </script>
              </div>
            </div>
          </div>
          <div class="col-lg-4">
            <div class="footer-content">
              <h2 class="title">Sitemap</h2>
              <div class="separator-2"></div>
              <nav>
                <ul class="nav flex-column">
                  <li class="nav-item">
                    <a class="nav-link" href="..\..\..\..\discover\overview\index.htm">What's FlashAir?
                    </a>
                  </li>
                  <li class="nav-item">
                    <a class="nav-link" href="..\..\..\resources\index.htm">Developer Resources
                    </a>
                  </li>
                  <li class="nav-item">
                    <a class="nav-link" href="..\..\index.htm">Tutorials
                    </a>
                  </li>
                  <li class="nav-item">
                    <a class="nav-link" href="..\..\..\api\index.htm">API Guide
                    </a>
                  </li>
                  <li class="nav-item">
                    <a class="nav-link" href="..\..\..\..\support\index.htm">Support
                    </a>
                  </li>
                  <li class="nav-item">
                    <a class="nav-link" href="..\..\..\..\support\forum\index.htm">Developer Forum
                    </a>
                  </li>
                  <li class="nav-item">
                    <a class="nav-link" href="https://iot-hub.flashair-developers.com/en/" target="_blank">FlashAir IoTHub <i class="fa fa-external-link"></i>
                    </a>
                  </li>
                </ul>
              </nav>
            </div>
          </div>
        </div>
      </div>
    </div>
  </div>
  <!-- .footer end -->

  <!-- .subfooter start -->
  <!-- ================ -->
  <div class="subfooter">
    <div class="container">
      <div class="subfooter-inner">
        <div class="row">
          <div class="col-md-12">
            <p class="text-center">Copyright &copy; 2019 FlashAir Developers. All rights reserved.</p>
          </div>
        </div>
      </div>
    </div>
  </div>
  <!-- .subfooter end -->

  <div id="overlay">
    <div class="container">
      <div class="row">
        <div class="col-md-10 ml-auto text-white">
          <p class="mt-3">If you write software or change the settings which are described on this site to your FlashAir device which was purchased at a mass retailer or online shop, it will not be eligible for a free replacement under the warranty policy. Please acknowledge and carry out development at your own risk.
          </p>
        </div>
        <div class="col-md-2 row">
          <div class="align-self-center">
          <button class="btn btn-default" id="btn-agree">Accept</button>
        </div>
        </div>
      </div>
    </div>
  </div>

</footer>
<!-- footer end -->

<!-- JavaScript files placed at the end of the document so the pages load faster -->
<!-- ================================================== -->
<!-- Jquery and Bootstap core js files -->
<script src="..\..\..\..\..\js\jquery.min.js"></script>
<script src="..\..\..\..\..\js\bootstrap.bundle.min.js"></script>
<!-- jQuery Revolution Slider  -->
<script src="..\..\..\..\..\js\jquery.themepunch.tools.min.js"></script>
<script src="..\..\..\..\..\js\jquery.themepunch.revolution.min.js imagesloaded.pkgd.min.js.pagespeed.jc.cG4Ou2l09T.js"></script><script>eval(mod_pagespeed_faLzhRoycV);</script>
<!-- Isotope javascript -->
<script>eval(mod_pagespeed_e7p3yiKri5);</script>
<script src="..\..\..\..\..\js\isotope.pkgd.min.js jquery.magnific-popup.min.js jquery.waypoints.min.js sticky.min.js jquery.countTo.js.pagespeed.jc.cWqBgip635.js"></script><script>eval(mod_pagespeed_EzjKnImtZK);</script>
<!-- Magnific Popup javascript -->
<script>eval(mod_pagespeed_hr4XVzGccf);</script>
<!-- Appear javascript -->
<script>eval(mod_pagespeed_zhicDWZgIJ);</script>
<script>eval(mod_pagespeed_MTpYywWOfL);</script>
<!-- Count To javascript -->
<script>eval(mod_pagespeed_dmh3ejQ5o0);</script>
<!-- Slick carousel javascript -->
<script src="..\..\..\..\..\js\slick.min.js pace.min.js template.js jquery.cookie.js custom.js jquery.matchHeight.js.pagespeed.jc.Y3630FlbPX.js"></script><script>eval(mod_pagespeed_s1mKdTeuWx);</script>
<!-- Pace javascript -->
<script>eval(mod_pagespeed_Zs67JgCVyk);</script>
<!-- Initialization of Plugins -->
<script>eval(mod_pagespeed_BIPkzwMbEw);</script>
<!-- Custom Scripts -->
<script>eval(mod_pagespeed_uSq_SD1Gz5);</script>
<script>eval(mod_pagespeed_mqKjjurRp4);</script>
<script>eval(mod_pagespeed_TteNs$c3Zl);</script>
<script>
  $(function () {
    $('.matchHeight').matchHeight();
  });
</script>
<script src="..\..\..\..\..\js\script.js prettify.js lang-lua.js lang-css.js.pagespeed.jc.ECF3Z77mjV.js"></script><script>eval(mod_pagespeed_SrZ0Yqg7MZ);</script>
<script>eval(mod_pagespeed_RSPiDhly$4);</script>
<script>eval(mod_pagespeed_0pGoVUEAt9);</script>
<script>eval(mod_pagespeed_IrbA2eGHA$);</script>
<script>
  ! function ($) {
    $(function () {
      PR.prettyPrint()
    })
  }(window.jQuery)
</script>
        <!-- footer end -->
    </div>
    <!-- page wrapper end -->
</body>

</html>